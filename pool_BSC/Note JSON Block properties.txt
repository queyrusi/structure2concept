--------> Chaque object de la matrice a ces property :


---------------------------------------------------------------------------
"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
"end": [5790, 9190, 19200, 24960, 30580, 33710, 39210, 
"block_id": "a6bb13b456834d7395b7e12066029eb3",
"text": ["我们再来看另一个例子", "这个例子来自于我们中学的平面几何", "也就说任意的给定由端点
"video_id": "a6bb13b456834d7395b7e12066029eb3",
"vertical_id": "1d0c14da0f5e4da6a882558bc92d5691",
"start": [4480, 6200, 12730, 20250, 25760, 31530, 36420
"sequential_name": "（a）计算",
"chapter_name": "第一章 绪论(上)",
"sequential_id": "5ec3aeb4c7d74bf687b0b864befd42a9",
"vertical_name": "01a-3: \t尺规计算机",
"course_id": "course-v1:TsinghuaX+30240184+sp",
"ccsource": "14BC39225843E4EF9C33DC5901307461",
"type": "video",
"video_pos": 0,
"video_name": "01a-3: \t尺规计算机"
________________________________________________________________________________


--------> ici, le chapter_id correspond à 
第一章 绪论(上)

--------> correspond à 数据结构(上)(自主模式) (a)计算。
________________________________________________________________________________
________________________________________________________________________________
________________________________________________________________________________
________________________________________________________________________________






{
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [6380, 8360, 10630, 12850, 14530, 17350, 19570, 23860, 26470, 29370, 31740, 36100, 37270, 39310, 42070, 44810, 47050, 49370, 51440, 53200, 54950, 56690, 57840, 59650, 62980, 64340, 65620, 67410, 69310, 71240, 74400, 76590, 79820, 82660, 85300, 86830, 88980, 90790, 93220, 95080, 99960, 102440, 104940, 109210, 110460, 113350, 114700, 116750, 117810, 120560, 121750, 124100, 126640, 131080, 133050, 136450, 138250, 139700, 141000, 142670, 144130, 145450, 147270, 149590, 151500, 156730, 159820, 162490, 164780, 168410, 170660, 173320, 177170, 179060, 183090, 185210, 186940, 188150, 191430, 193110, 194510, 196330, 197840, 200470, 203950, 205570, 208320],
	"block_id": "0a9f7e9606d64d16b3fa49469532e501",
	"text": ["什么是一个好的算法", "或者说是一个好的计算过程", "这件事并不容易回答", "我们也可能从不同的侧面", "听到过不同的回答", "比如说 它必须是刚才说的正确的", "它应该有足够的能力来处理", "各种规模的 包括可能是一些特殊", "也可能是一些一般性的问题实例", "也可能是退化的 或正常的输入", "以及所有合法的那些输入", "我们说这确实是好的算法的一方面", "但是很遗憾", "这不是我们这里最在意的", "也可能有的人会提到", "我们不光是要对合法的输入能处理", "对不合法的输入 也需要能够处理", "也就是所谓的需要健壮", "很遗憾 这部分", "也不是我们这里最强调的", "虽然我们在做题的时候", "在完成一个数据结构的时候", "要考虑这些", "但首先考虑的并不是这些", "还有一部分呢 是说", "一个好的程序或者好算法", "需要是可读的", "这个也是很重要的一个方面", "虽然也不是我们最重要的方面", "但是我们要强调这一点", "所谓的程序 是你作为人", "去指挥计算机的途径", "也是你和计算机相互沟通的一个渠道", "我们说这很重要", "是对的 但不完全是这样", "我们说还有一方面", "也就是说 程序语言", "实际上像自然语言一样", "它也是人与人之间打交道的", "一个很重要的部分", "所以可读性是非常强调的一条", "也就是说 你所设计出来的算法", "在形式上 必须是结构清晰的", "所有的变量 和有些有语义的对象的命名", "都应该是准确的", "同时还应该准备足够多的注释", "包括文档等等", "这个很重要", "但是还不是最重要的", "那我们这里头 最最重要的", "到底是什么呢？", "我们说最最重要的", "其实就是这样两个字 效率", "也就是说 我们需要不仅能够", "指挥计算机进行计算", "而且希望计算的速度要尽可能的快", "同时消耗的资源", "比如说空间的资源", "要尽可能的少", "既要马儿跑", "又要马儿不吃草", "做不到", "我们这里所努力的方向是", "既要马儿快快跑", "又要马儿吃得少", "有一个很著名的公式 大家都应该听过", "也就是说 算法和数据结构的结合", "就可以得到解决问题的程序", "那正如我们刚才所说的", "程序未必能够有效地进行计算", "所以这里 狗尾续貂", "对这个公式略做一点大胆的修改", "我们说在算法和数据结构", "这两个因素都兼具之后", "我们还需要使得它具有效率", "当然前提是", "使得这两部分不是一般的", "简单的堆砌", "而是能够有机地融合 结合", "只有在这样的情况下", "我们才能够写出", "高效的程序和算法", "从而高效率地", "来完成计算这样一个过程", "这也正是我们在这一节里", "希望告诉大家的", "几个重要概念及观念"],
	"video_id": "0a9f7e9606d64d16b3fa49469532e501",
	"vertical_id": "3e47a0aaa3994d82a6faae0d829b664a",
	"start": [4500, 6380, 8880, 10630, 12850, 14530, 17350, 19570, 23860, 26470, 29370, 34040, 36440, 37270, 40500, 42070, 44810, 47850, 49920, 51440, 53200, 54950, 56690, 57840, 60860, 62980, 64340, 65620, 67580, 69310, 71240, 74400, 76980, 81300, 82660, 85560, 86830, 88980, 90790, 93220, 95780, 100300, 102440, 105590, 109210, 110460, 113350, 115600, 116750, 119300, 120560, 122920, 124100, 128130, 131080, 133050, 136450, 138250, 139700, 141730, 142670, 144130, 145450, 147270, 149590, 153340, 156730, 159820, 163180, 164780, 169120, 170660, 173920, 177170, 179060, 183890, 185210, 186940, 188150, 191430, 193110, 194510, 196330, 197840, 201840, 203950, 205570],
	"sequential_name": "（a）计算",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "5ec3aeb4c7d74bf687b0b864befd42a9",
	"vertical_name": "01a-6\t: 好算法",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "377996C5D516E6A39C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01a-6\t: 好算法"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "3e47a0aaa3994d82a6faae0d829b664a",
	"text": ["01a-6\t: 好算法"],
	"video_id": "0a9f7e9606d64d16b3fa49469532e501",
	"vertical_id": "3e47a0aaa3994d82a6faae0d829b664a",
	"start": [0],
	"sequential_name": "（a）计算",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "5ec3aeb4c7d74bf687b0b864befd42a9",
	"vertical_name": "01a-6\t: 好算法",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "377996C5D516E6A39C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01a-6\t: 好算法"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [5780, 8440, 11750, 13290, 16680, 18350, 22460, 25060, 28190, 30310, 33120, 37760, 40330, 43520, 46700, 48380, 50470, 55630, 57840, 60610, 63820, 65310, 67750, 71690, 73480, 75790, 77050, 78590, 82430, 86000, 88140, 89360, 90070, 91920, 94120, 98390, 100880, 102380, 105040, 107550, 109210, 111570, 114330, 115520, 117210, 120800, 126290, 128930, 130940, 132610, 134130, 136260, 139730, 141610, 145250, 148910, 152260, 156060, 159410],
	"block_id": "47135139ea7843ed9b38a8f48389abc7",
	"text": ["欢迎回到数据结构的课堂", "今天我们介绍计算模型", "上一节讨论了计算这个概念", "我们知道", "如果是从有效性和高效性来说的话", "它的基本前提是", "数据结构和算法这两个方面的有机结合", "所以我们也笼统的称之为DSA", "那么相应的我们也获得一个概念", "也就是说不同的DSA", "实际上有好坏之分 有优劣之别", "这种好坏和优劣完全是从它的效率而言的", "那么这只是一个定性的感觉", "在实际的应用中这还是不够的", "我们必须能够学会定量的来做度量", "没错 度量", "在这里度量非常重要", "我们不妨重温一下", "Kelvin爵士的一句名言", "他指出To measure is to know", "也就是说如果我们科学的使命", "是去了解这个世界", "是去理解这个世界的规律", "那么最终的形式往往是体现为", "你能够对这个世界", "或者这个自然界的某一个侧面", "或者是某一个方面", "来进行有效地", "尽可能准确的测量或者测度", "就像我们现在需要对算法来做测度", "那么如果这句话是", "非常有道理的话", "那么下一句话", "对于计算机科学的工作者来说", "就更加具有针对性了", "他说 如果你需要去改进某一样东西", "在我们这里 就是指DSA", "我们的数据结构和算法", "那么你首先就要懂得", "如何去测量 测度它", "原因很简单", "如果你都不知道它到底有多好", "包括不知道它能够有可能有多好", "甚至反过来", "你不知道它不能有多好", "那么无从谈起如何去改进和优化它", "这也是我们这一节的主题", "当然在测度这个问题上", "我们实际上还有两步要走", "第一步也就是这一节", "形象的比喻的话", "将交给大家一把尺子", "在这样一个抽象的理想的尺子上", "它已经标记好了刻度", "而后面我们还会花一些篇幅和时间", "教给大家如何真正地运用这把尺子", "去度量任何特定、具体的DSA", "我们先来了解", "这样一个公共的理想的尺子"],
	"video_id": "47135139ea7843ed9b38a8f48389abc7",
	"vertical_id": "7c99058f3ee84737a49ffabdc9a44dc7",
	"start": [4480, 6200, 9420, 12550, 13760, 17130, 18950, 22870, 26100, 28570, 30310, 33880, 38000, 41410, 43520, 47220, 48380, 53890, 56110, 58310, 61130, 63820, 65310, 68320, 71690, 73480, 75790, 77050, 79350, 82800, 86890, 88140, 89360, 90070, 92280, 94570, 98720, 100880, 103180, 105040, 108370, 109210, 111570, 114330, 115520, 117690, 123230, 127020, 128930, 131280, 132930, 134130, 136770, 139800, 142480, 145550, 149120, 155310, 156060],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-1: \t性能测度",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "B08777D231F9702D9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01b-1: \t性能测度"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"text": ["（b）计算模型"],
	"video_id": "47135139ea7843ed9b38a8f48389abc7",
	"vertical_id": "7c99058f3ee84737a49ffabdc9a44dc7",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-1: \t性能测度",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "B08777D231F9702D9C33DC5901307461",
	"type": "sequential",
	"video_pos": 0,
	"video_name": "01b-1: \t性能测度"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "7c99058f3ee84737a49ffabdc9a44dc7",
	"text": ["01b-1: \t性能测度"],
	"video_id": "47135139ea7843ed9b38a8f48389abc7",
	"vertical_id": "7c99058f3ee84737a49ffabdc9a44dc7",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-1: \t性能测度",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "B08777D231F9702D9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01b-1: \t性能测度"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [7140, 10410, 13440, 15090, 20160, 23320, 26480, 28200, 30830, 31920, 34840, 37670, 39060, 42540, 47500, 48980, 51730, 53500, 54980, 57960, 61830, 65900, 69530, 71450, 74650, 78820, 82590, 87520, 90910, 92980, 95340, 99260, 110020, 113620, 116950, 119370, 123840, 125170, 127380, 130630, 134420, 138580, 140420, 142640, 144800, 146880, 148400, 150890, 153550, 156160, 157610, 160710, 162860, 164190, 169140, 170810, 174550, 178180, 179650, 181330, 183050, 185970, 188530, 190670, 193130, 197640, 200450, 202840, 204580, 207730, 210770, 215690, 218190, 221250, 222540, 224840, 226500, 228970, 231040, 235540, 238050, 243160, 244570, 246010, 248280, 250420, 253710, 255140, 257140, 258980, 260720, 262760, 264920, 266740, 268080, 271210, 273450, 275880, 278730, 281920, 283560, 285900, 288530, 290710, 292610, 297750, 299580, 302290, 304580, 307390, 311580],
	"block_id": "9140466faf3a432b851aa9dab8c90768",
	"text": ["我们这里所谓的测量或者测度", "实际上是算法分析的范畴", "具体来说 所谓的算法分析", "主要的有两个方面", "第一证明一个DSA是正确的", "当然这件事情不是那么简单", "其中用到的很多工具和方法", "都不是那么一目了然", "但是这并不是我们这门课", "最最主要的一个方面", "尽管我们会在后面结合具体的DSA", "给大家做一些具体的方法的介绍", "但是系统的学习", "将留待算法分析的相关理论里深入了解", "而在这里我们首先关注的是", "算法分析的另一个方面", "也就是我们前面所说过的性能方面", "这里如果倒过来看", "就是所谓的成本", "具体来说 分为两个部分", "也就是所谓的时间成本和空间成本", "正如我们在稍后会解释的一个原因", "在这里 我们不妨首先采用都比较公认", "和普遍应用的一个方法", "也就是暂时把空间忽略掉", "而把注意力更多的集中在时间方面", "所以我们的问题归纳一下的话就是", "如果我们关注一个DSA的时间成本", "我们应该如何来度量它", "如果这种度量", "涉及到两个或者多个DSA", "那么它们之间又该如何进行比较", "我们的思路 首先是从建模开始", "不妨定义这么样一个数学上的描述", "也就是说 如果我们采用", "名字叫A的这么样一个算法", "求解某一个问题具体的一个实例", "一个instance", "如果把它的名字叫作P的话", "那么它所需要的计算的时间成本", "就会被记成TA(P)", "比如说我们前面讲过的三等分问题", "可能我们用的那个算法", "就是欧几里得的尺规作图法", "那么 那个具体的实例呢", "也可能就是我们在前面的那章", "片子里所放的那个问题", "当然也可能很不一样", "那个输入也就是那条线段", "有可能是不同长度的", "也可能是不同的方向", "总而言之对任何一个具体的实例P", "我们都可以从数学上", "记下这么样一个量", "如果我们能够真正地获得", "这么样一个度量值的话", "当然我们就可以来对算法进行比较", "但是很遗憾 纯粹从数学上", "所做的这样一个定义", "其实意义不大", "为什么呢？", "因为同样一个问题", "它所能够出现的实例", "是非常非常非常多的", "通常情况下都是无数的", "所以我们不可能把目光注意到", "这样一个一个的具体实例上去", "任何一个具体的实例都存在", "以偏概全的问题", "它不可能使我们获得对这个问题", "所对应的这个算法一个总体的认识", "所以我们必须进行归纳和概括", "那么如何归纳和概括呢？", "数学给我们提供了常用的", "也是非常有效的方法", "就是划分等价类", "一般来说", "需要对任何一个问题无数的实例", "进行一定的粗分类", "并且就某一类谈它的计算成本", "那么怎么分类呢", "我们这里观察到", "大家普遍能接受的", "定性的一个结论", "虽然它不见得总是成立", "但是它大多数时候都是成立的", "也就是说任何一个问题", "它的计算成本", "实际上是和对应的", "那个实例的规模相关的", "一般来说还是正相关的", "我再强调一次", "这里说的都是往往一般", "并不是说所有的时候都这样", "在我们的习题集中", "大家可以比较轻易地构造出一些反例", "但这不影响我们这里基本的一个判断", "也就是说大体来说是这样的", "比如说回到前面三等分的那个问题", "如果我们把分成多少段 这个段数", "作为问题输入的规模", "那么应该很自然的能理解", "随着你要求分的段数越多", "这个问题的计算成本和代价", "也会相应的更高", "所以概括起来而言", "问题规模越接近", "它们所对应的计算成本", "也会相应地彼此接近", "而随着规模的增加", "计算成本通常也会呈上升的趋势"],
	"video_id": "9140466faf3a432b851aa9dab8c90768",
	"vertical_id": "d6103ddf252f419db0ab1dd6ec416b10",
	"start": [4570, 7490, 11110, 13440, 16630, 21090, 24120, 26480, 28850, 30830, 31920, 34840, 37670, 39060, 45210, 47500, 48980, 51940, 53500, 56010, 57960, 62930, 66430, 69530, 71970, 75200, 79830, 83640, 88240, 92020, 92980, 95340, 107260, 110580, 114210, 116950, 119850, 123840, 125170, 127640, 131330, 135930, 138580, 140420, 143110, 144800, 146880, 149280, 151490, 153550, 156160, 158470, 160710, 162860, 166910, 169140, 170810, 175590, 178180, 179650, 182290, 183630, 185970, 188530, 191010, 194100, 197640, 200900, 202840, 204640, 207730, 212810, 216680, 219290, 221250, 222540, 225610, 226500, 228970, 231530, 236810, 241650, 243160, 244570, 246010, 248280, 251430, 253710, 255140, 257140, 259270, 261720, 262760, 264920, 267090, 268080, 271210, 273450, 276430, 279190, 281920, 283560, 285900, 288530, 290710, 295980, 297750, 300080, 302290, 305530, 307390],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-2: \t问题规模",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "A21C4001F1E144E29C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01b-2: \t问题规模"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "d6103ddf252f419db0ab1dd6ec416b10",
	"text": ["01b-2: \t问题规模"],
	"video_id": "9140466faf3a432b851aa9dab8c90768",
	"vertical_id": "d6103ddf252f419db0ab1dd6ec416b10",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-2: \t问题规模",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "A21C4001F1E144E29C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01b-2: \t问题规模"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [6300, 7820, 11210, 13340, 17310, 20750, 24100, 26030, 28200, 30930, 33740, 37410, 40140, 44210, 46440, 48370, 56130, 58920, 61890, 63670, 67500, 71190, 75140, 77640, 81040, 83860, 88420, 92400, 94710, 98620, 101640, 105190, 107740, 110750, 117180, 120380, 123240, 126210, 129400, 131440, 133630, 135430, 137530, 141240, 142570, 145570, 147800, 150350, 153500, 157450, 159310, 160610, 164420, 165770, 169440, 172030, 173990, 176540, 179040, 181790, 183770, 187010, 189280, 191430, 193490, 196640, 198600, 200700, 203530, 205890, 208470, 212030, 214000, 216870, 218500, 220470, 227740, 229750, 232820, 236780, 238770, 240290, 242740, 245560, 249330, 252320, 254780, 256590, 260740, 265340, 270510, 273260, 276970, 279360, 281590, 284160, 286860, 288790, 291000, 293290],
	"block_id": "e004762167dd4c5ebd78bc05c705114e",
	"text": ["在经过了这样一个", "等价类的划分之后", "我们就可以重新将刚才那样一个", "数学的度量的形式进行改写", "我们看到这里最大的一个不同就在于", "把原来每一个具体的问题实例P", "变成了笼统而言的一个规模的度量值", "也就是n 也就是说", "我们可以把某一个算法", "在求解规模为n的不是一个", "而是一大类实例的过程中", "它们各自所需要的时间成本", "笼统记作TA(n)", "我们如果暂时把算法固定的话", "那么也可以把这个A忽略掉", "就直接记作T(n)", "很遗憾这样的一个定义", "依然不能满足我们实际的需求", "不足以支撑我们分析的需要", "为什么呢？", "我们注意到 对于同一问题", "即便是规模接近甚至相等的输入实例", "计算成本虽然大体是差不多的", "但毕竟还是有差异", "甚至会有实质性的差异", "我们来看这么样一个例子", "假设在平面中", "随便给定你有限个 比如说n个点", "那么当然这里的n就是输入规模", "我们知道其中的任何三个点", "都会定义一个三角形", "那么我们这里不妨提出一个问题", "就是如何找出其中", "面积最小的那个三角形？", "如果你不知道技巧的话", "不妨采用所谓的蛮力算法", "也就是说逐一地去枚举", "所有的n中取3的组合", "分别的算出它们各自对应的面积", "并保留和记录下", "最后的整体的最小值", "没问题", "这个算法的正确性是不言而喻的", "但是我们说采用这样", "即使是固定的一个算法", "对于不同的n个点的组合", "有可能运气是不一样的", "所需要的成本有很大的区别", "比如说我们说在最坏情况下", "可能会直到所有的组合都尝试遍后", "在最后才会找到", "那个最小的三角形", "但是反过来也有的时候", "你会运气比较好", "比如说你在比较早的时候", "甚至是一上来所枚举的三个点", "你就会发现它们", "是不仅像现在这样是近似的共线", "而是正好是共线的", "这个时候你应该会知道", "它的面积是0", "而作为面积来说不可能是负值", "换而言之", "在这个时候其实你已经找到了", "这个问题的一个解", "也就是说你在这个时候", "可以直接返回", "报告最小的面积是0", "所以我们可以看到", "同样规模为n的那些实例", "所需要的计算成本是有天壤之别的", "当然你还可以举出更多的例子", "可能我想有些同学", "现在已经想到了我们在前面讲过的", "Hailstone的那个例子", "它也是这样的情况", "好 既然这样的话", "那么我们又该如何去定义", "我们刚才所给出来的这个T(n)呢？", "显然我们不能把命运", "寄托在最好的情况下", "而我们应该更多的", "关注一个算法的最坏情况", "所以确实如此", "如果我们确实像现在大部分的", "主要的这种分析的准则所要求的那样", "只关心其中的最坏的情况", "也就是成本最高的那种情况", "那么T(n)的取值应该是", "在所有规模为n的问题实例中", "将它们的计算成本进行总体的比较", "并且取出其中的最大值", "这样也就是我们所说的", "最坏情况分析的原则", "这是首先必须关注的", "当然我们也会关注其它的性能", "在稍候我们会关注平均性能", "分摊性能等等等等", "但是我们首当其冲的", "确实是最坏的情况"],
	"video_id": "e004762167dd4c5ebd78bc05c705114e",
	"vertical_id": "fed876259294457e989d3648a567ee44",
	"start": [4710, 6300, 7820, 11210, 14490, 17310, 20750, 24100, 26030, 28200, 30930, 34330, 37410, 41530, 44210, 46440, 53740, 56130, 59980, 62800, 64880, 67500, 71810, 75140, 78420, 82120, 86890, 88420, 92400, 96170, 99080, 102640, 105190, 107740, 115080, 117180, 121050, 123240, 126950, 129870, 131440, 134740, 135430, 139660, 141240, 142970, 145570, 148380, 151540, 153500, 157450, 159310, 162480, 164420, 166660, 169440, 172030, 173990, 176540, 180320, 181790, 184950, 187980, 189280, 191430, 194720, 196640, 198600, 202430, 203530, 205890, 209640, 212720, 214000, 216870, 218500, 225670, 227740, 229750, 234870, 236780, 238770, 240290, 243790, 246800, 249330, 252320, 254780, 257260, 260740, 266410, 270510, 274880, 276970, 280080, 282420, 284680, 286860, 289400, 291000],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-3: \t最坏情况",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "AAC0E537B2CAC8A19C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01b-3: \t最坏情况"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "fed876259294457e989d3648a567ee44",
	"text": ["01b-3: \t最坏情况"],
	"video_id": "e004762167dd4c5ebd78bc05c705114e",
	"vertical_id": "fed876259294457e989d3648a567ee44",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-3: \t最坏情况",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "AAC0E537B2CAC8A19C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01b-3: \t最坏情况"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [7890, 9450, 10970, 14940, 16810, 18420, 20090, 22450, 23780, 26620, 28800, 31630, 34800, 38310, 41500, 44170, 46340, 49540, 52670, 55470, 57080, 59180, 62940, 67060, 69710, 71520, 73790, 75490, 77920, 79190, 81050, 84010, 88280, 91570, 93070, 95460, 97940, 100590, 103250, 105050, 107780, 109990, 111130, 114030, 115830, 119040, 121010, 123050, 124630, 127490, 131310, 134040, 136920, 140150, 143090, 146360, 150490, 153820, 157120, 160040, 164090, 167390, 170900, 173350, 175490, 178310, 180990, 183790, 185930, 186950, 189980, 191660, 194470, 196440, 200170, 202770, 205080, 207740, 210910, 213290],
	"block_id": "0d84c5da36f344369629c538a8a05b1d",
	"text": ["在解决了特定算法的评价问题之后", "我们就需要进一步的", "来回答另一个问题", "也就是说当同一个问题", "拥有多个算法的时候", "这是经常出现的情况", "我们如何来评价", "它们之间的相对好坏", "或者说优劣呢？", "一种直观的方法是", "所谓的实验统计方法", "简单的说是骡子是马拉出来溜溜", "谁所用的时间越短", "谁用的资源越少 谁就越优", "但是这种表面想当然的方法", "在实际应用中是不够用的", "因为它并不能准确的", "反应一个算法真正的全面的效率", "那么这个原因就在于", "我们的实验统计", "或者叫作实验测试", "总是不充分的", "算法和人非常的相似", "不同的算法 各有所长也各有所短", "所以如果我们的测试", "在问题实例的规模", "以及类型等等方面", "覆盖的不够全面", "不具有充分的代表性的话", "那么这种测试", "本身就是带有偏见的", "它的结论也就难以让人信服", "再退一步的 即使是同一种算法", "也可能是由不同的程序员完成的", "而且他们也有可能", "选择不同的编程语言", "而且甚至再进一步地", "可能会选择不同的编译器", "设置不同的编译选项等等", "再进一步", "即便是上述因素都是一致的", "也就是说是由同一个程序员", "用同一种语言", "并且用同一种编译器和设置", "编辑出来的执行代码", "在不同的硬件体系结构上", "在不同的操作系统上", "它体现出来的性能", "在此时和彼时", "也可能有很大的区别", "比如说 硬件的CPU速度", "内存和磁盘的速度和容量", "以及它们之间的带宽 等等", "还有包括操作系统", "在不同的时刻 对不同计算资源", "分配的当时的状况不同 等等等等", "这些因素都不可能由少数次", "有限次实验统计就足以覆盖", "综合起来我们最后", "能够可行的方法只有一条", "也就是说 我们需要抽象出", "一种理想的计算的平台或者说模型", "唯此才能抛开上述种种", "具体的 其实是次要的因素", "更加直接和准确地", "来评价和测量算法", "最后得出一个客观的结论", "这样一种做法", "就犹如物理学家伽利略", "所擅长的那样", "不是去真正的去做一个", "现实中的物理实验", "而是在头脑中去做一个", "虚拟的理想的", "但又是能够反应事物本质的实验", "而在我们这里", "确实人们已经构造出了", "很多种这样理想的平台和模型", "比如说我们接下来", "要讨论的图灵机模型"],
	"video_id": "0d84c5da36f344369629c538a8a05b1d",
	"vertical_id": "90731e3e98c54cb3b3f22595f10cd83a",
	"start": [4500, 7890, 9450, 12750, 14940, 16810, 18420, 20090, 22450, 24890, 26620, 29320, 32710, 35140, 39030, 41500, 44170, 46340, 51300, 53900, 55470, 57080, 60810, 63540, 68140, 69710, 71520, 73790, 76230, 77920, 79190, 81750, 85650, 88280, 91570, 93070, 96380, 97940, 100590, 104010, 105050, 107780, 109990, 111130, 114030, 116400, 119740, 121690, 123050, 124630, 129000, 131310, 134040, 138500, 140150, 143090, 147300, 150490, 155310, 157120, 161760, 164090, 168430, 170900, 173950, 175490, 178910, 182630, 183790, 185930, 188050, 189980, 192350, 194470, 196440, 201490, 202770, 205080, 209280, 210910],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-4: \t理想模型",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "39541E45EDCC91AD9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01b-4: \t理想模型"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "90731e3e98c54cb3b3f22595f10cd83a",
	"text": ["01b-4: \t理想模型"],
	"video_id": "0d84c5da36f344369629c538a8a05b1d",
	"vertical_id": "90731e3e98c54cb3b3f22595f10cd83a",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-4: \t理想模型",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "39541E45EDCC91AD9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01b-4: \t理想模型"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [29380, 33190, 35970, 40080, 43340, 47640, 51370, 53650, 55890, 61260, 63720, 67130, 70400, 73720, 75520, 78500, 83370, 86380, 90400, 95420, 99140, 100990, 104170, 108020, 110750, 115130, 118330, 119890, 122400, 124960, 127330, 129460, 131080, 133990, 138460, 139840, 143560, 144930, 149870, 152860, 155590, 158340, 159870, 164040, 166640, 168990, 173350, 176400, 178750, 181740, 184480, 186730, 191280, 194050, 198760, 202620, 206270, 208760, 212380, 214350, 215710, 218510, 221400, 223300, 225010, 227770, 229590, 232720, 234890, 239950, 242380, 248050, 252460, 255960, 258540, 260930, 262540, 264260, 266900, 269790, 272670, 275340, 276830, 278480, 280960, 285250, 287270, 290130, 293140, 295990, 298510, 305150, 306620, 307790, 311420, 315120, 318250, 319750, 323880, 325430],
	"block_id": "4f46d44d24ac48fea6af1e778586d5fe",
	"text": ["图灵机模型具有以下要件", "首先是Tape也就是带", "通常称作纸带或磁带", "这个带呢 被均匀地划分为", "一个一个的小格子 称作cell", "每一个小格子上面都标注有某个字符", "默认的初始情况下 所有的格子中", "都标记有一个特定的符号", "比如说我们这里约定是“﹟”号", "所以相应的每个格中所标的字符", "都是来自于一个字符表", "而这个字符表的长度是有限的", "还有一个要素呢", "也就是上面这个称作Head的东西", "我们一般称它作头", "或者再具体点叫读写头", "我们说在任何时刻Head", "都是对准了Tape上的某一个cell", "或者是它 或者是它 或者是它", "而整个的图灵机等会我们会看到", "它是按照一个节拍的节奏来运转的", "每经过一个节拍", "这个头都可以向左", "或者是向右移动一个单元", "转入下一个单元格", "而在对准任何一个单元格的时候", "它都可以读取出这个单元格中", "所标注的那个字符", "也可以修改", "这个单元格中所对应的字符", "正因为这个原因", "它确实应该叫作读写头", "这是它的功能", "两方面的功能 可以读也可以写", "整个图灵机 或者再具体讲", "也就是这个读写头", "在任何时候都会处于某一种状态", "处于某一个state", "当然这些状态本身只有有限种可能", "图灵机在读写头", "每经过一个节拍移动一次以后", "它都有可能从一个状态", "转入另一个状态", "当然在这个过程中需要遵照", "事先约定好的某一套规则", "那么这些规则是什么样的呢？", "我们可以看到它是以这种", "Transition Function的形式来描述的", "确切地说", "每一个这样的转换或者传递函数", "都是由五个元素确定的", "我们来解读一下", "第一个元素q 代表图灵机", "或读写头当前所处的状态", "而这个c 代表的是读写头", "当前所正对的单元里所存的字符", "我们说前两项", "可以理解为是当前的状态", "后面三项呢", "描述是它紧接着的动作", "也就是我们说的转换", "这个d 代表的是", "在当前单元格里填入的", "或者说是修改成的", "一个新的字符", "在修改完毕之后", "读写头自己可以", "向左L 或者向右R", "移动一个单元格", "同时将自己的状态由刚才的q", "转化为现在的p", "打个形象的比方", "如果读写头是一个人的话", "那么下面是他所看到的一个东西", "每一个人都处于一个状态", "那么他根据他自己当时的状态", "和它所能看到的东西", "可能会做一些决策", "并且有一些行动 然后改变状态", "比如说这是一个人", "他当时正处于饥饿状态", "那么很可能他看到的一只苹果", "那么通常情况下", "他会把这只苹果吃掉", "把这里的原字符变成空的字符", "同时在获取到这样的一个苹果之后", "他可能饥饿状态有所改善", "比如说 会进入到一种饱的状态", "在此之后 它可能会选择", "向左或者向右离开", "也就是完成一次转换", "在所有的状态中", "有一个特定的状态", "是我们约定好的", "通常用h来标记 表示是停机", "言下之意就是说", "一旦图灵机进入到h状态", "就会立即终止", "此时它所对应的计算任务", "也就相应完成"],
	"video_id": "4f46d44d24ac48fea6af1e778586d5fe",
	"vertical_id": "a86bdb50f2e643e099e49b26c8fc37b9",
	"start": [27210, 30990, 33190, 37010, 40080, 44860, 48720, 51370, 53650, 57350, 61260, 63720, 69170, 70400, 74100, 75520, 80130, 83370, 87610, 92720, 95420, 99140, 100990, 104170, 108650, 112180, 115130, 118330, 120840, 122400, 126070, 127330, 129460, 131080, 135970, 138460, 139840, 143560, 145950, 150910, 152860, 155590, 158340, 160370, 164040, 167410, 171760, 173350, 177360, 178750, 181740, 185350, 189010, 191280, 196500, 198760, 204970, 206270, 211210, 212380, 214350, 216580, 218510, 221400, 223300, 226350, 227770, 229590, 233440, 235790, 239950, 246750, 249890, 252930, 256740, 258540, 260930, 262540, 264260, 267980, 270410, 272670, 275340, 276830, 278480, 282000, 285250, 287270, 291190, 293140, 296660, 303610, 305150, 306620, 308520, 313750, 315120, 318250, 320750, 323880],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-5: \t图灵机",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "68343C3DFC34DCA89C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01b-5: \t图灵机"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "a86bdb50f2e643e099e49b26c8fc37b9",
	"text": ["01b-5: \t图灵机"],
	"video_id": "4f46d44d24ac48fea6af1e778586d5fe",
	"vertical_id": "a86bdb50f2e643e099e49b26c8fc37b9",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-5: \t图灵机",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "68343C3DFC34DCA89C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01b-5: \t图灵机"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [6300, 7930, 10910, 13780, 18180, 21370, 27050, 28710, 33560, 35500, 38820, 41650, 44650, 47140, 48780, 51740, 54170, 55660, 57910, 61320, 63490, 66710, 69720, 75500, 77950, 85710, 87490, 90930, 93670, 96870, 98360, 103310, 106380, 108560, 111250, 113860, 120010, 122980, 129480, 132100, 136480, 142960, 148790, 152550, 155000, 158790, 164270, 167160, 169890, 175230, 177420, 179000, 180440, 183960, 186170, 189950, 191590, 194470, 197050, 202240, 205930, 210360, 212240, 214400, 216320, 219810, 221460, 224320, 226200, 233210, 237310, 242790, 244590, 247760, 250180, 252300, 253710, 256440, 259270, 264100, 267260, 269080, 270790, 272690, 276380, 278270, 279630, 280950, 282310, 283750, 286530, 287190, 289350, 292860, 294650, 297440, 302310, 306020, 308410, 311510, 314240, 316230, 318980, 320310, 324040, 328450, 330210, 332100, 334760, 338060, 340650, 344760, 349070, 350660, 352430, 353540, 356100, 359060, 362700, 366980, 368360, 370220, 373910, 375830],
	"block_id": "add98f08e2a544099a9bf0060225f0fe",
	"text": ["好我们来看图灵机的", "一个具体的实例", "也就是说如何利用图灵机", "来完成非负整数加1的功能", "这里的非负整数我们统一约定", "是以二进制形式", "在纸带上用若干个单元", "统一表示的", "稍加观察我们会发现", "这里至关重要的要点", "是在其中的这样一个比特", "也就是从右向左", "从最低位向更高位 数", "所能发现的 所能遇到的", "第一个零比特", "既然它是零比特", "那么它后面 如果有的话", "后面的那些比特", "都应该是1", "而我们要完成这项工作", "实际上只需做这么样一件事", "就是将这个比特后续的", "所有那些1 翻转为零", "而原先最低位的这个零", "翻转为1", "好 基于这样的一个算法构思", "我们不难得出", "由如下转换函数 转换规则", "所构成的一个图灵机", "我们来看它的每一条", "转换函数意味着什么", "我们先来看第一条", "这里处理的是当前图灵机", "所处的是左箭头的状态", "同时它当前所对的", "那个单元里的字符是1", "这是什么样一个状态呢？", "我们说正如这个图所示的这样状态", "也就是说在最初的时候", "我们初始认为它是这样的向左状态", "而这个时候 它所对的字符是1", "按照我们刚才的规则", "这个1如果有的话 应该翻转为零", "翻转完之后呢", "我们说图灵机的读写头", "应该向左侧移动一步", "好 在移动之后呢", "我们说读写头 或者说图灵机", "应该继续保持原来的向左的状态", "所以我们说 这样一条规则", "有可能多次使用", "它所起的作用", "概括而言就是", "扫描作为最低位那个零的", "后缀的那些1比特", "将它们逐个的翻转为零", "而在这个过程中", "保持图灵机向左的", "这样一个状态 一直前行", "正如我们原来分析预料的那样", "一般情况下 会碰到一个零比特", "在这个时候我们说", "第二条规则就生效了", "也就是说", "一直向左行进的时候", "如果我们终于不再碰到的是1", "而第一次碰到的零", "这个时候它要做的就是", "将这个零翻转为1", "然后是原来一直向左的读写头开始向右", "也就是完成了一次转向掉头", "这个过程可以用这个图来表示", "也就是说", "当通过第一条传递函数", "这个读写头一路前行", "直到碰到这个零之后", "也就是这个状态", "它就会基于第二条规则", "转化为向右的状态", "然后将刚才那个零比特转化为1", "注意在此之前", "原来的那些1比特", "都已经转化为了", "相应的零比特", "好 接下来", "我们实际上只需要", "将这个读写头", "完整的送回到", "原来这个位置", "并停机就可以了", "对这个磁带上头的所有的单元", "已经没有必要", "进行进一步的修改了", "我们把后续复位动作", "所对应的指令的分析", "这个任务交给大家在课后完成", "那么我们这里也要强调一点", "表面看当我们做到这个的时候", "实际上相对于输入", "已经完成了加1操作的基本要求", "为什么我们还需要", "做后续的一些动作", "把这个读写头复位到", "最初的位置呢？", "我们说 这是因为", "它有可能本身以后会成为", "一个算法的一部分", "而那个算法", "在每次调用使用它之前", "都会对它当时所处的整体状态", "有一个严格的规范要求", "它是非常有必要复位的", "这种形式不仅在图灵机有", "而且在后面我们所说的", "各种更高级模型中", "同样会存在", "甚至成为软件开发过程中", "大家相互合作时候的一个准则", "我们称这个叫作规范", "我们在后续的几章会看到", "这种规范更多的是", "以接口的形式给出来的", "在这里 我们也首先看到了", "这种接口的影子"],
	"video_id": "add98f08e2a544099a9bf0060225f0fe",
	"vertical_id": "52a6c9e30f22471886d03b9bfab99763",
	"start": [4700, 6300, 8570, 10910, 15690, 18950, 23230, 27050, 31490, 33560, 35500, 38820, 41650, 44650, 47140, 50200, 51740, 54170, 55660, 59480, 61320, 64260, 66710, 72660, 75500, 83080, 85710, 87490, 90930, 95310, 96870, 101710, 103310, 106380, 109260, 111250, 118140, 120010, 126660, 129480, 132100, 141600, 144600, 151010, 152550, 155000, 161900, 164270, 167160, 172500, 175230, 177420, 179000, 180440, 183960, 186940, 189950, 191590, 194470, 200350, 202240, 208590, 210360, 213230, 214400, 216320, 219810, 221460, 224320, 226930, 234430, 239780, 243610, 244590, 247760, 250180, 252300, 253710, 256440, 259270, 265810, 267260, 269080, 270790, 274890, 276380, 278270, 279630, 280950, 282310, 283750, 286530, 287190, 291050, 292860, 294650, 300720, 303370, 306910, 308410, 312500, 314240, 316230, 318980, 322220, 325050, 328450, 330650, 332100, 334760, 338060, 341630, 347110, 349070, 350660, 352430, 353540, 356100, 360660, 364270, 366980, 368360, 371260, 373910],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-6: 图灵机实例",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "346FEB87FBBA65CD9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01b-6: 图灵机实例"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "52a6c9e30f22471886d03b9bfab99763",
	"text": ["01b-6: 图灵机实例"],
	"video_id": "add98f08e2a544099a9bf0060225f0fe",
	"vertical_id": "52a6c9e30f22471886d03b9bfab99763",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-6: 图灵机实例",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "346FEB87FBBA65CD9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01b-6: 图灵机实例"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [7300, 8810, 13050, 15700, 18760, 23560, 26840, 31340, 34110, 36640, 39340, 42310, 45030, 49980, 52420, 60870, 62780, 66320, 69350, 72860, 77010, 79660, 84150, 85570, 87460, 90150, 92640, 97040, 99270, 104460, 106260, 109540, 111210, 114510, 117260, 119270, 124160, 126410, 128920, 133220, 136770, 140210, 142060, 144590, 147720, 149210, 152250, 158480, 162610, 164510, 166880, 173110, 175150, 178540, 184330, 186260, 189420, 192400, 195160, 198290, 203000, 206240, 210330, 211950, 215880, 221540, 227080, 231620, 234180, 237100, 240080, 244570, 248440, 251820, 255780, 258090, 260560, 264150, 269400, 271210, 273850, 275840, 278990, 282950, 287510, 291090, 292730, 295660, 300100, 304860, 308830, 313150, 316080, 318250, 320510, 324930, 329190, 332480, 336710, 340620, 343610, 349250, 355810],
	"block_id": "fbb702681b9a404cb3ac552ce49e65dc",
	"text": ["我们再来看Random Access Machine", "也就是所谓的RAM模型", "在可计算的意义上讲", "它和图灵机是完全对等的", "尽管二者之间还是有重要的区别", "那么二者之间首先的一个共同之处就是", "它们都拥有无限的空间", "当然这个在实际世界中还不能做到", "这种无限的空间", "在这里是以顺序编号的", "一组寄存器的形式给出来", "每一个寄存器换而言之", "都由一个自然数唯一的标识", "我们可以说第0号寄存器 第1号寄存器", "第2号第3号 以及诸如此类", "那么与图灵机的转化函数相对应的", "这里提供了一系列的", "大概有10种格式的可行的语句", "我们大概看一下", "首先是常数赋值语句", "也就是说 我们可以将一个常数", "赋予编号为i的那个寄存器", "我们也可以在寄存器与寄存器之间", "完成数值的复制", "具体来说", "我们可以把第j个寄存器中的数值", "赋值到第i个寄存器中", "如果这个是直接通过一个自然数", "来确定一个寄存器的话", "那么这样一种方式", "就叫做间接取址", "学过汇编的同学", "应该非常好理解这一点", "其他的同学 我相信也不难", "我们不妨在这里解释一下", "这里所谓的间接取址", "实际上就是首先根据给定的编号j", "取出编号为j的寄存器中", "所存放的整数数值", "并将这个整数作为一个编号", "再取对应寄存器的数值", "最终 将取出来的这个数值", "复制到另一个指定的", "比如说第i个寄存器中", "但这种复制的方向", "也可能颠倒过来", "接下来", "这里还支持寄存器与寄存器之间", "数值的加和减两种最基本的算数运算", "并且能够将结果", "转入第3个寄存器中", "为了构成算法", "这里也不可或缺的需要有", "条件判断语句和转向语句", "所谓条件判断语句 这里有判0", "也就是一个寄存器的数值是不是0", "包括判正", "也就是其中的数值是不是一个正数", "只要条件满足", "就会相应的转到对应的语句", "这个l呢都是顺序语句的编号", "当然也有绝对的转向", "还有一个特别的STOP语句", "也就是终止语句", "那么这个STOP语句的功能", "和图灵机中的那个停机状态h是完全对等的", "每当执行到STOP 对应的程序都会停止下来", "我们稍后再看RAM模型的一个例子", "但实际上到这里", "我们已经完全可以将RAM模型", "和图灵机模型放在一起做一个概括", "我们说二者其实都是对一般的", "计算工具进行抽象以后的简化", "这样的一个简化以后", "我们不仅可以用这种基本的简单的操作", "来描述我们的算法", "而且更重要的是", "使得我们可以因此独立于具体的环境和平台", "对具体算法的总体效率做出比较和评判", "而且这种比较评判", "相对于前面那种实测的方法", "更具有可信度", "那么为什么能这样呢", "这里关键是做了一个转换", "也就是说我们将算法所运行的时间", "转化为在上述这些基本平台上", "执行算法的过程中", "所需执行基本操作的次数", "时间 到次数", "这样就将时间的统计问题", "转换为了次数的整体求和和估算问题", "因此 我们前面所定义的那个T(n)", "也就是在求解规模为n的问题的时候", "我们所需要的时间成本", "我们就可以转化为", "为此所需要执行的基本操作的次数", "这样的好处在哪呢 有很多", "比如说 其中一点就是", "至少我们现在可以不用考虑硬件环境", "一个算法好不好 并不取决于运行的时候", "所依赖的那个CPU主频的快慢", "而取决于它本身它需要执行多少次CPU的计算", "我们说这样确实更加客观"],
	"video_id": "fbb702681b9a404cb3ac552ce49e65dc",
	"vertical_id": "df53f7137df6401f816aff6bb5b3c0cd",
	"start": [4610, 7300, 10500, 13050, 15700, 20340, 23560, 27930, 32800, 34110, 36640, 40300, 42310, 46570, 49980, 56760, 60870, 62780, 67830, 70740, 74480, 77010, 81330, 84150, 86630, 87460, 90150, 94090, 97040, 102750, 104460, 107880, 109540, 112220, 115350, 117740, 119270, 124160, 126410, 130030, 133220, 137890, 140210, 142060, 146140, 147720, 151010, 155050, 158480, 162610, 164510, 171930, 173110, 175780, 180220, 184330, 187910, 189420, 193960, 195160, 199630, 204510, 207850, 210330, 213690, 215880, 222250, 228430, 232530, 234180, 237100, 241060, 244570, 249970, 251820, 255780, 259170, 260560, 264150, 269400, 271210, 273850, 277590, 280590, 283890, 287510, 291090, 292730, 296890, 301590, 304860, 310420, 313150, 316080, 318580, 320510, 326510, 330630, 333580, 337540, 340620, 344210, 352770],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-7: \tRAM模型",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "C4DCAD733C0A193F9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01b-7: \tRAM模型"
},

{
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "df53f7137df6401f816aff6bb5b3c0cd",
	"text": ["01b-7: \tRAM模型"],
	"video_id": "fbb702681b9a404cb3ac552ce49e65dc",
	"vertical_id": "df53f7137df6401f816aff6bb5b3c0cd",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-7: \tRAM模型",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "C4DCAD733C0A193F9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01b-7: \tRAM模型"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [6610, 8590, 13360, 16120, 20460, 24910, 27650, 30400, 35530, 40080, 44680, 47760, 53510, 57870, 60840, 64350, 66700, 68710, 71880, 77060, 82130, 87750, 92420, 95400, 99350, 101850, 104630, 107060, 112270, 116790, 124030, 126880, 129390, 134280, 137670, 138980, 142810, 145160, 149410, 152300, 155850, 160130, 162960, 165720, 169070, 171700, 174820, 176340, 181460, 184600, 187190, 189640, 191550, 194880, 198720, 200560, 202780, 205740, 209640, 213030, 215490, 217850, 220130, 222830, 226240, 229250, 231680, 233890, 236300, 239360, 241110, 244280, 246760, 250340, 253960, 258620, 260560, 262640, 265180, 269030, 270790, 274140, 276140, 277510, 281650, 284080, 286690, 290250, 299070, 301040, 305080, 310050, 314870, 317640, 322140, 327160, 328870, 333890, 335800, 337980, 342180, 343970, 346290, 349140, 351430, 353580, 359820, 361860, 364840, 368430, 372820, 375210, 379180, 382320, 384460, 388030, 391880, 394900, 397470, 400410, 403060, 408660, 414020, 416180, 420210, 421870, 425700, 429270, 432620, 435720, 442430],
	"block_id": "c90f2f191fef400283dfc603f452dcac",
	"text": ["我们来看基于RAM模型", "实现的一个具体算法实例", "这个算法的功能是", "在向下取整的意义上的除法", "具体来说 对于任何一个非负整数c", "和正整数d 我们都需要在做完除法之后", "再实施向下取整 得到一个整数", "那么这个输出", "实际上也就是不超过c/d的那个最大整数", "我们可以将它表述为", "在所有那些与d相乘以后", "不大于c的整数x中的最大值", "也可以等效的表述为", "在所有乘以d以后严格的小于c+1的", "那些整数x中的最大值", "这样一种重新的表述", "其实不光是文字上的一个转换", "更重要的是", "它为我们提供了一个对应的算法思路", "我们可以将它表述并且实现如下", "具体来讲 我们需要保留c+1", "并且以它为基础 反复的从中去减除d", "因为RAM模型只支持加或者减运算", "不断的减除", "直到对应的那个寄存器R[0]发生下溢", "也就是说 它不再是一个正数", "这个时候 我们统计下", "在此之前所做过减法运算次数", "那么它就是我们所要得到的输出", "我们可以将整个这个思路兑现如下", "因为这里所有的加法运算和减法运算", "都不允许直接对常数进行", "而我们一上来就需要做个预处理", "对c+1 所有需要利用常数赋值语句", "将这个增量1预先的存到一个寄存器", "比如R[3]中去", "所有接下来我们对R[0]", "也就是最初输入的c", "加R[3]之后 实际上效果就是c自增", "所以在经过这样的预处理之后", "c+1确实被存放到R[0]中去了", "那么接下来 从第二句开始", "如果注意到这里有个goto第2个语句的话", "我们就知道这实际上是构成了一个循环", "那么这个循环是做什么事呢", "正如我们前面所说的那样", "它是不断的需要从刚才那个量里头去", "刨除掉d", "d本身也是作为输入的一部分", "已经事先存放在1号寄存器中了", "所以每次做的事情", "就是从刚才经过预处理以后", "存放的实际上是c+1的", "那个寄存器R[0]中减除掉d", "不断的减除 每减除一次", "我们刚才说过", "要相应的把计数器累计", "这个计数器在哪呢", "在我们这里取做的就是R[2]", "第2个寄存器 它的初值是0", "所以每一次它都要自加", "加一个1 而加的这个1", "依然是通过我们预先赋值", "那个常数存到R[3]中去来实现", "经过了这样一次自减", "经过了一次计数器的累加之后", "我们这个时候就要判断 R[0]", "也就是c+1初始的那个数", "是否已经不再是一个正数了", "如果它还是正数", "那就说明还没有减除完", "这个时候我们可以通过goto语句", "像刚才所说的继续执行这一步", "所以反过来说", "如果我们有朝一日执行到了第5条语句", "那就说明R[0]经过若干次减除以后", "已经不再是一个正数", "而这个时候呢", "我们大致就可以返回这个x", "当然 通过精细的分析我们会发现", "实际上这个数值是差一的", "所以这里头我们还要将R[3]", "也就是原来存放的这个常数1", "再减一次", "经过了这样一次减法以后", "再把这个数值返回回去", "才会得到真正准确的", "我们所需要的那个向下取整的除法值", "那么我们把这样的一个", "具体实例也罗列出来了", "具体来说就是", "对于c=12以及d=5来做的一个除法", "不难发现 如果不取整的话是2.4", "所以向下取整的话 应该得到的是2", "不出意外 在我们对照代码", "逐行逐条的将整个寄存器序列的内容", "作一罗列之后", "我们会发现 最终在R[0]这个位置上", "会得到并且返回我们", "所需要的那个值 也就是2", "那么这个算法的正确性", "以及更多的例子的给出", "留给同学们在课后完成", "而我们这里需要向大家", "传达的一个重要的概念", "是这张表所暗示的", "也就是说 我们不光可以把整个计算过程", "逐次罗列出来", "更重要的是 正像刚才所说的那样", "我们将整个计算过程所需要的计算成本", "转化为了这个表的规模 或者说它的高度", "具体来说就是它的行数", "其实就是执行的基本操作的次数", "按照我们刚才的推断", "实际上就是我们这个算法", "所需时间的一个最客观的度量", "而这个度量是清晰的 明确的", "可比较的 而且没有歧义的", "概括一下", "我们通过图灵机模型和RAM模型", "给大家一个清晰的尺度", "这个尺度确实可以用来对算法进行度量", "我们可以此判断 哪个算法的性能更好", "至少在什么情况下更好", "当然 也像我们开篇的时候所说的那样", "这只是一把尺子", "我们这节只告诉你尺子是什么", "那么更重要的一个问题就是", "尺子怎么用 如何用好这把尺子", "有什么样的一些规则 有哪些技巧", "那么我们要留待后续课节再向大家作介绍"],
	"video_id": "c90f2f191fef400283dfc603f452dcac",
	"vertical_id": "e1f4276667bd4eb9acdce495c37575ca",
	"start": [4710, 6610, 11520, 13360, 17220, 20460, 24910, 29300, 30400, 38050, 40080, 44680, 51080, 53510, 57870, 62510, 64350, 67730, 68710, 74410, 78660, 82440, 88820, 93920, 95400, 99350, 102800, 104630, 108280, 113790, 120360, 124030, 126880, 129390, 134280, 137670, 140480, 142810, 145160, 150370, 152300, 157380, 160130, 162960, 167370, 170030, 171700, 174820, 177940, 181460, 185490, 187190, 189640, 191550, 196250, 198720, 200560, 204350, 207180, 209640, 213030, 215490, 217850, 220130, 224450, 226240, 229250, 231680, 233890, 237930, 239360, 242060, 244280, 248320, 250340, 253960, 258620, 261400, 262640, 266830, 269030, 271810, 274140, 276140, 279020, 282100, 284080, 286690, 297080, 299070, 303770, 305080, 311590, 314870, 319210, 322140, 327160, 330130, 333890, 335800, 340450, 342180, 343970, 347940, 349140, 351430, 356170, 359820, 361860, 364840, 368430, 372820, 376130, 380730, 382320, 384460, 389070, 391880, 396420, 397470, 400410, 403990, 410180, 414020, 417700, 420210, 421870, 426810, 429270, 432620, 437260],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-8: \tRAM实例",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "D0BD1B68DCA2C8F79C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01b-8: \tRAM实例"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "e1f4276667bd4eb9acdce495c37575ca",
	"text": ["01b-8: \tRAM实例"],
	"video_id": "c90f2f191fef400283dfc603f452dcac",
	"vertical_id": "e1f4276667bd4eb9acdce495c37575ca",
	"start": [0],
	"sequential_name": "（b）计算模型",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "b712b0a3477f4e7ea99d05223c23ce4b",
	"vertical_name": "01b-8: \tRAM实例",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "D0BD1B68DCA2C8F79C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01b-8: \tRAM实例"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [8070, 14560, 17730, 23540, 26390, 29800, 32830, 36320, 38640, 43440, 47690, 50770, 53110, 56160, 58530, 64100, 67040, 70040, 74750, 79350, 84230, 86640, 90600, 92240, 96210, 97450, 100380, 104170, 106910, 110920, 113840, 116250, 117760, 121180, 123250, 126390, 127970, 130540, 133290, 137670, 139980, 141510, 145350, 149030, 154010, 158470, 160260, 163570, 166640, 174150, 177750, 180350, 186570, 191150, 197070, 198770, 201360, 204470, 206560, 209330, 212960, 216610, 219980, 223120, 231410, 236430, 241450, 246860, 250700, 255950, 259550, 264160, 269760, 276790],
	"block_id": "a7389b5205234b00873eadf9d0b0d802",
	"text": ["接下来的这节我们将重点讨论大O记号", "如果将我们在上一节所引入和介绍的计算模型", "比作一杆公正的直尺", "那么大O记号 就相当于是这杆直尺上的刻度", "非常有意思的是", "在这里我们并不需要一味地强调", "这种刻度的精细程度", "而是 在定性和定量之间", "达到一个适度的折中", "使得我们可以用更短的时间更迅速地", "抓住DSA性能方面的要害和主要的方面", "我们很快就会体会到", "作为一种强大的工具", "大O记号对于复杂度分析而言", "是多么地至关重要", "关于科学记号 在科学本身的发展过程中", "所具有的这样的一种特殊的重要的作用", "很多人都曾经注意到过", "比如Alan Turing就曾经指出", "对于数学而言 最最急需的", "与其说是 一个又一个的新发现的定理", "不如说是", "尽早发现和设计出来的good notations", "也就是好的记号", "大O记号好的方面在哪呢？", "我们可以概括为", "中国古代诗人陶渊明的一句话", "陶渊明在评价自己的时候", "曾经说过自己是好读书的一类", "但是他很注意一点 不求甚解", "这里我们说所的不求甚解", "并不是说不去求解", "而是说 反过来", "我们不要过多的拘泥于问题的细节", "和一些琐碎的部分", "换而言之 我们在考察一个东西", "比如说DSA的时候", "应该像考察一个人一样", "应该更多的看中它的长远", "也就是说 要看中DSA的潜力如何", "比如在处理更大规模问题的时候", "它应该是如何的", "第二 也像考察一个人一样", "我们不要过多地 纠结于它的细微不足", "而应该更多的看到它主要的方面 也就是主流", "非常有意思", "陶渊明的这种见解", "和我们将要介绍的大O记号的思路", "居然不谋而合", "回到最初的问题", "也就是说 随着计算问题规模的不断增长", "相应的计算成本会如何地增长", "那么这里我们更多地关心的是足够大规模的问题", "而且考察的是 计算成本的总体增长趋势", "因此 我们更倾向于采用所谓的Asymptotic analysis", "也就是渐近地分析方法", "具体来说就是", "我们要考察当问题的规模大于大于2", "也就是足够大之后", "相应地规模为n的问题", "需要多少计算的时间", "在这里我们上节曾经介绍过", "可以转化为平台上的基本操作的次数", "以及存储单元相应需要的规模", "后者我们说通常可以不考虑", "这方面可以参考我们的教科书和习题解析", "用一张图来表示 也就是这样", "如果我们用横轴表示问题的规模", "用纵轴来表示相应地计算成本", "那么 数据结构和算法具体的任何一个组合", "都可以得到这样一条曲线", "那么 我们所关心的并不是这条曲线", "局部的、细微的 包括暂时的一些趋势", "而是看它的主要的、长远的变化的趋势"],
	"video_id": "a7389b5205234b00873eadf9d0b0d802",
	"vertical_id": "22e05bac224c490ba1e320670d07f125",
	"start": [4510, 9030, 14560, 18890, 25190, 26390, 29800, 33770, 36320, 39280, 43440, 49160, 50770, 53110, 56160, 60030, 64100, 67040, 70990, 75710, 80410, 85210, 86640, 90600, 93700, 96210, 97450, 102180, 104170, 107440, 111770, 113840, 116250, 117760, 121180, 124180, 126390, 127970, 130540, 134170, 137670, 139980, 142820, 145350, 149030, 157190, 158470, 160260, 164290, 172240, 174150, 177750, 181840, 186570, 192140, 197070, 200220, 201360, 204470, 206560, 209330, 214280, 216610, 219980, 229020, 232270, 238550, 242310, 246860, 251540, 255950, 260310, 264160, 270430],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-1: 主流长远",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "319A2E0242B317179C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01c-1: 主流长远"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "dcf6afe77a434223a34a2e57f49802e8",
	"text": ["（c）大O记号"],
	"video_id": "a7389b5205234b00873eadf9d0b0d802",
	"vertical_id": "22e05bac224c490ba1e320670d07f125",
	"start": [0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-1: 主流长远",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "319A2E0242B317179C33DC5901307461",
	"type": "sequential",
	"video_pos": 0,
	"video_name": "01c-1: 主流长远"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "22e05bac224c490ba1e320670d07f125",
	"text": ["01c-1: 主流长远"],
	"video_id": "a7389b5205234b00873eadf9d0b0d802",
	"vertical_id": "22e05bac224c490ba1e320670d07f125",
	"start": [0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-1: 主流长远",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "319A2E0242B317179C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01c-1: 主流长远"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [9350, 13470, 17400, 21240, 23360, 27490, 30100, 31300, 34220, 40240, 46230, 52050, 54700, 58700, 60920, 63290, 65950, 69780, 72380, 75000, 77680, 82940, 84950, 87480, 94700, 97830, 99750, 101180, 103070, 105010, 107390, 109070, 111910, 115950, 118290, 122470, 126510, 129530, 133070, 137880, 140770, 143820, 145890, 148550, 153440, 157660, 158680, 160490, 166020, 170700, 173230, 177140, 179570, 182240, 184020, 187890, 191400, 195400, 197550, 199340, 203310, 209900, 212520, 219110, 222800, 224170, 226260, 228130, 230920, 235750, 240080, 243010, 245850, 249510, 252630, 256460, 258190, 261110, 264670, 267580, 270640, 274720, 276930, 280800, 285210, 288880, 290890, 294670, 298180, 301160, 303320, 307510, 309340, 312100, 315030, 316990, 321240, 324670, 329530, 332620, 337970, 339290, 0, 0],
	"block_id": "2cd3fbd0d38042fc92c81e9523fc4677",
	"text": ["为此我们可以采用所谓的大O记号big-O notation", "来从形式上简化我们刚才所说的", "度量时间成本的T（n）的表示", "具体来说 在满足一些条件以后", "我们可以在big-O的意义下", "将大写的T（n）表示为某一个f（n）函数", "什么条件呢？", "这个充要条件就是", "我们存在一个预先确定的一个常数C", "而且确实 当n足够大之后 我们就会发现", "T（n）绝对不会超过F（n）的c就是常数倍", "这样的话就有可能使得我们更为简便地", "界定一个算法的复杂度", "我们可以来看这样一个例子", "假设我们已经得到了", "这样一个T（n）的表达式", "那么我们可以看到 这个表达式", "像通常的一样 总是会显得略微复杂", "我们不容易抓住其中主要的脉络", "为此我们可以采用", "刚才所说的那个办法 不断地简化", "大家注意 这里我们用的是小于号", "也就是说 我们可以不断地", "对函数大写的T（n）做放大", "比如说 我们先把其中这个2替换成n", "刚才我们说了 n足够大以后", "是会远远地大于2的", "我们不妨替换成它", "那么很快我们就可以看到", "这个地方就是2n", "这就是为什么我们可以将这个", "经过依次放大之后", "转化为6的n方", "接下来我们再采用这种办法", "对4做一个放大", "我们同样的把它放大成n方", "这就是为什么有一个7n方", "乘上前面的5n以后 我们说", "可以得到一个35倍的n的立方", "接下来 我们再对6做一次放大", "放大成n的立方", "这样的话 我们可以得到", "36倍的n的立方", "这就是为什么我们说", "大概是等于6倍的n的3/2次方", "我们说 因为这里还有一个常数", "而这里可以看到", "其实常数是无所谓的", "所以我们可以把这个6进一步地抹去", "从而通过在外面再加一个big-O记号", "来完成这样的一个估计", "刚才那个例子已告诉我们", "经过这样的一次变换以后", "big-O内 用来近似的那个函数f（n）", "将会更加地简捷", "而且 同时它也依然能够", "准确地反应前者的增长趋势", "根据这样的一个定义", "这样的一个充要条件", "我们可以得出", "关于大O记号的两个重要的处理的手法", "第一个 任何这种函数的常系数是可以忽略掉的", "就像这样 可以视为1", "第二个方面 低次项也是可以忽略掉的", "也就是说 如果一个表达式可以表示", "或者是至少展开成", "这样的一个多项式的形式", "其中的低次项", "比如说b相对于a 略要小一些", "低次项 n的b次方 是可以忽略掉的", "从这里 我们也再次看得出来", "我们前面所讲过的 所谓的长远", "是体现在n足够大", "而所谓的主流 就体现在", "所有这些常系数和低次项", "我们说 非主流一些旁枝末节的因素", "都可以在此忽略", "使得主流的信息能够突出出来", "我们依然用一个图来表示", "这个图是在原来那个基础上", "增加了一个big-O的这样一条虚线", "我们可以从这个图很好地看出来", "big-O所设计和定义的用意", "也就是说 它可以理解为", "在上方给出了T（n） 也就是", "我们说的这个时间复杂度的一个上界", "也就是upper bound", "所以 我们也可以认为big-O", "是对T（n）的一个悲观的估计", "这里我们再次提醒大家", "注意这个图所画的用意", "大家可以看到在n规模比较小的区域内", "我们说这个T（n）未必一定", "在big-O这个曲线的下方", "其实这里还有一个含义", "我们没有通过这个图画出来", "也就是说 实际上这个big-O的upper bound的这条线", "完全是可以在常系数的意义下的", "它在准确的数值上 未必是低于大写的T（n）", "只要预先约定好的一个常系数c", "它经过放大能够完成构成上界的功能", "就可以了", "所以 这是我们所说的大O记号", "我们可以看到非常地简明"],
	"video_id": "2cd3fbd0d38042fc92c81e9523fc4677",
	"vertical_id": "b54550df965b418dbf497dd90ffd3886",
	"start": [4500, 10090, 13470, 18240, 21240, 23360, 28950, 30100, 31300, 35760, 40240, 47930, 52050, 57040, 59130, 60920, 63290, 65950, 69780, 73980, 75000, 80250, 82940, 84950, 89900, 95750, 97830, 99750, 101180, 103070, 105010, 107390, 109070, 113350, 115950, 118930, 123870, 127160, 129530, 134500, 137880, 142210, 143820, 146780, 148550, 154950, 157660, 158680, 162120, 166610, 170700, 175150, 177140, 179570, 182240, 184820, 187890, 193380, 195400, 197550, 199340, 205690, 210350, 215050, 219990, 222800, 224170, 226260, 228130, 231980, 238110, 240080, 243010, 247370, 249510, 252630, 256460, 258190, 262420, 265680, 267580, 271990, 274720, 277810, 280800, 285210, 288880, 292310, 294670, 299630, 301160, 303320, 307510, 309340, 313510, 315030, 316990, 321240, 325800, 330070, 333780, 337970, 0, 0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-2: 大O记号",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "1373FB26FF98FA5D9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01c-2: 大O记号"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "b54550df965b418dbf497dd90ffd3886",
	"text": ["01c-2: 大O记号"],
	"video_id": "2cd3fbd0d38042fc92c81e9523fc4677",
	"vertical_id": "b54550df965b418dbf497dd90ffd3886",
	"start": [0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-2: 大O记号",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "1373FB26FF98FA5D9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01c-2: 大O记号"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [7430, 8690, 10950, 13920, 17270, 20540, 24720, 28000, 30630, 40610, 44850, 48720, 52320, 54570, 65720, 67560, 70760, 72660, 74090, 76800, 80340, 84240, 90010, 92510, 96870, 100160, 103550, 107990, 110820, 115560, 117060, 121050, 126650, 130890, 133730, 137270, 142740, 147210, 149040, 154150, 158440, 159820, 162930, 167540, 171090, 177450, 181510, 184810, 189710, 199430, 202080, 205480, 210440, 213810, 217410, 221550, 224110, 226270, 231950, 235090, 238460, 241050, 243950, 249700, 251330, 252930, 257570, 258860, 261940, 263680, 268230, 271120, 272420, 275940, 277290, 279700, 281880, 284420, 287340, 290290, 292570, 301760, 305810, 309200, 312040, 313990, 316370, 319470, 321740, 325100, 327050, 330740, 340000, 343870, 348480, 349970, 352000, 355640, 359660, 366590, 369710, 372250, 374710, 378080],
	"block_id": "dd5e1be602f243efa8dfcc038168162b",
	"text": ["在大O记号定义的这杆直尺上", "到底有哪些刻度呢？", "我们首先来看，第一个刻度", "也就是所谓的常数复杂度", "我们把它记作O(1)", "哪些是常数复杂度呢？", "我们说常数，包括较大的常数", "以及常数按照通常的四则混合运算", "经过运算以后得到的常数", "甚至常数的更高阶的一些运算的结果", "从理论上讲，我们也依然认为是常数", "尽管像这个，比如2000的2000次方", "在实际中，已经是大的不能再大的一个数", "是不能被忽略的", "如果有算法 能够达到这样的复杂度", "我们说这是再好不过的了", "否则 什么都不用做", "就得到计算结果", "我们说那是不可能的", "那是不劳而获", "从代码段的形式上来看", "哪些算法，是符合这种复杂度呢？", "我们说如果一段代码中不含", "显式的或者隐式的循环", "具体来讲，就是由分支判断构成的代码体", "那么，它必然是顺序执行的", "总体而言 它必然是O（1）的复杂度", "那么反之呢？", "我们说情况并不那么简单", "有很多时候，虽然它从形式这样讲", "包含循环", "但是未必会造成更大的复杂度", "有的时候，虽然既有条件判断，也有转向", "表面看，是有一个转向的可能", "但也许因为语义上的某种限制", "其实，它转向的目标是根本不可能达到的", "还有一些呢 也同样会出现这种情况", "比如说，隐式的循环，也就是所谓的递归", "也会出现类似的情况", "这些问题 在这里我们不再展开地介绍", "有兴趣的同学，同样可以去参考我们的教材", "以及习题解析", "在那里有较为详细的介绍", "接下来的一个刻度", "是所谓的对数或者叫对数多项式复杂度", "我们先来看对数", "也就是说n，问题的规模的对数", "很有意思的是 我们在这里，", "往往不再标明具体的底数 为什么呢？", "因为在底数为常数的情况下", "其实具体是多少，在这里是无所谓的", "我们来看一下这其中的原因", "如果有一个表示原来是以a作为底数的", "我们完全可以通过这样的一个等价变换", "把它变换成，以b作为底数的", "而为此所作的调整", "无非是在前面乘了这么样一个", "log以a为底b的对数", "那么我们刚才讲过a和b都是常数", "所以经过混合运算以后也是常数", "我们说过在big-O", "甚至严格地讲，在θ的意义上讲", "这个常系数都是可以忽略掉的", "所以我们说，具体到底是a还是b", "其实是无所谓的", "只要它们都是常数", "与其如此，我们不如干脆就把它们忽略掉", "不再具体标明", "相应地呢", "还有，我们另一个特征就是", "如果这个n，也就是问题的规模", "本身是呈一个幂指数的形式", "它有一个常数次方", "我们说这个在log n的掩盖下", "也是可以忽略掉的", "原因也很简单", "在高中就应该学过这个", "n的肩膀上这个c是可以等价地", "挪到log前边去，变成一个常系数", "没错，又是常系数", "所以它也是可以被忽略掉的", "当然，对数本身也可以呈现出多项式的形式", "比如说对数的若干次方，构成一项", "然后可能另一个次方，多少次项", "那么在这种情况下", "我们同样可以参照刚才", "big-O的那种处理的方法", "把低次的项 相对来说是", "常系数的那些项都忽略掉", "从而同样可以得到一个简明的", "log的多项形式", "所以我们把这个叫poly-log function", "这类算法，我们说也是非常高效", "因为从渐近地意义上讲", "我们可以证明，对于任何一个多项式", "哪怕是次数很低，", "只要它是正数，一个次数c", "logn都是可以在大O记号的意义下", "被n的c次方所掩盖的", "所以它应该是，低于任何多项式的一个复杂度", "从这个意义上讲 它本身", "应该是无限地接近于O(1)的", "所以这种算法", "也是完全或者足以令我们满意的"],
	"video_id": "dd5e1be602f243efa8dfcc038168162b",
	"vertical_id": "267d2e1ac61d4898b4cb88db0aba07e1",
	"start": [4650, 7430, 9350, 10950, 15030, 19090, 20540, 24720, 28000, 35840, 40610, 45800, 48720, 52320, 61780, 65720, 68580, 70760, 72660, 74990, 78090, 80340, 86590, 90010, 92510, 96870, 100160, 106860, 107990, 110820, 115560, 117900, 122480, 127630, 130890, 133730, 138560, 142740, 147210, 150590, 154150, 158440, 160180, 166340, 167540, 176240, 177450, 182810, 184810, 194980, 199430, 203690, 206140, 210440, 213810, 218900, 221550, 224110, 227870, 231950, 236710, 238460, 241050, 245320, 249700, 251330, 254470, 257570, 261040, 261940, 264440, 268230, 271120, 273410, 275940, 278380, 279700, 281880, 284420, 288900, 290290, 297730, 301760, 305810, 310750, 312040, 313990, 316370, 319470, 321740, 325100, 327710, 336660, 341060, 343870, 348480, 349970, 352530, 355640, 361320, 368010, 369710, 373730, 374710],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-3: 高效解",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "2BD278201ADB08FF9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01c-3: 高效解"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "267d2e1ac61d4898b4cb88db0aba07e1",
	"text": ["01c-3: 高效解"],
	"video_id": "dd5e1be602f243efa8dfcc038168162b",
	"vertical_id": "267d2e1ac61d4898b4cb88db0aba07e1",
	"start": [0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-3: 高效解",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "2BD278201ADB08FF9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01c-3: 高效解"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [8150, 13010, 16970, 18210, 21440, 24290, 27250, 29640, 31410, 34140, 37570, 39980, 41220, 44670, 49260, 54410, 57220, 61020, 63280, 65990, 68580, 70500, 72250, 75390, 79710, 81980, 83350, 86170, 89940, 96670, 101840, 104120, 107840, 109170, 112530, 117220, 120410, 125390, 131320, 133680, 138720, 140360, 143470, 147610, 150630, 152510, 154490, 158140, 165170, 169210, 173570, 176220, 180520, 183590, 186830, 190040, 196690, 205650, 207750, 212840, 214920, 219340, 223570, 225460, 226920, 229050, 232030, 234890, 237250, 241700, 243460, 249710, 253630],
	"block_id": "141b29a77dac437cb151518a08734eb7",
	"text": ["接下来的一个刻度 是一个大家族", "我们统称之为多项式复杂度", "我们可以看到多项式复杂度", "从一般的意义上讲", "确实呈现出多项式的一个形式", "正如我们此前讲过的", "所有的低次项 其实都是可以忽略的", "即便是最高次项", "它的常系数也是可以去掉的", "所以我们说这类的复杂度", "可以很简明的界定为 其中最高次", "也就是这个多项式本身的次数", "这样的一个复杂度", "它的具体形式很多", "比如说我们看 这是一次方的", "这个地方呢 我们也可以做这种", "以后要习惯于这种一眼看过去的计算", "比如说 在这里我们可以很快地把这个抹掉", "在这里 可以把这个和这个都抹掉", "所以很快地 我们可以得到这两项", "而这两项的常系数 其实我们都可以抹掉", "或者说等效地 把它们当成1", "所以很快地 可以得到结果", "是n的3次方", "这个地方也一样", "我们很快把这些低次项抹掉", "把常系数抹掉", "很快地 做一个指数之间的减法", "2减1次方 所以很快地也能得到是1次方", "笼统来说 它们都属于多项式形式的复杂度", "在其中 有必要提一下的", "就是所谓的线性复杂度", "也就是说 对于一个规模为n的问题", "它所需要的时间成本", "恰好就是由n一阶的 来度量的", "在我们的很多相应的编程习题中", "更多的问题 大部分的问题", "都是介乎n的1次方到n的平方之间复杂度", "更高的复杂度 其实会使得这个问题的难度一下增加", "计算时间也会很快地提高", "我们可以再来看 这样一个", "稍微复杂一些的例子", "同样用我们刚才的那些方法", "可以看到 先从最里层来入手", "经过比较以后 可以断定", "低次项都是可以抹掉的", "所以我们可以很快地得到", "这个的结果应该是 2013除以3", "应该就是671 这是它的次数", "所以相对而言 后边的这个", "无论是567 还是 更不用说是123", "都是更低阶的 都可以直接忽略掉", "所以相应的 我们这里头其实就等于是", "可以估算为是 n的671次方", "再经过1次开方 再除一个11以后", "我们就可以得到是 n的61次方", "以后 我们要习惯于这样的估算", "这类算法的效率 通常我们认为是", "已经可以令人满意的了", "当然 我想第一次接触到这个结论的同学", "往往持一个怀疑的态度", "这样的一个标准是不是太低了呢？", "因为我们说这里的多项式的阶次c", "并没有更多的限定", "只要它是个正数就可以", "它可能是1 可能是2", "也可能是20 甚至可能300 4万", "难道这样就可以了吗？", "我们说确实是如此", "因为在理论上讲 我们不得不把它归类为", "稍微容易求解的问题", "而再往下的问题 我们的下一个刻度", "就要被归结为所谓难解的问题"],
	"video_id": "141b29a77dac437cb151518a08734eb7",
	"vertical_id": "cf5490eb0d5b4be585830836fc7810a8",
	"start": [4500, 8740, 14490, 16970, 18210, 22580, 24290, 28340, 29640, 32500, 34140, 37570, 39980, 43390, 47250, 52710, 54410, 58180, 61020, 63280, 65990, 68580, 70500, 72250, 78710, 79710, 81980, 83350, 86170, 93290, 99970, 101840, 105040, 107840, 109170, 114900, 117220, 120410, 126870, 131320, 137080, 138720, 141280, 144350, 148190, 150630, 152510, 154490, 158140, 167020, 169210, 173570, 177220, 180520, 184520, 186830, 193440, 202750, 205650, 209000, 212840, 217220, 220120, 223570, 225460, 227440, 229050, 233030, 235840, 237980, 241700, 246820, 249710],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-4\t: 有效解",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "30B1E80ED8DCE6519C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01c-4\t: 有效解"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "cf5490eb0d5b4be585830836fc7810a8",
	"text": ["01c-4\t: 有效解"],
	"video_id": "141b29a77dac437cb151518a08734eb7",
	"vertical_id": "cf5490eb0d5b4be585830836fc7810a8",
	"start": [0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-4\t: 有效解",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "30B1E80ED8DCE6519C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01c-4\t: 有效解"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [8150, 11640, 14980, 18660, 23660, 27780, 31700, 33990, 37130, 41560, 43610, 49600, 54550, 57180, 61200, 63840, 66920, 71730, 76300, 80900, 87020, 91280, 94710, 102520, 105170, 109820, 111990, 117990, 120990, 124900, 127140, 131320, 135580, 139670, 142570, 146260, 149380, 151700, 156610, 161670],
	"block_id": "5c1d7ccdf8954a3c9168f4fe4bfe2189",
	"text": ["我们的下一个刻度 被归结为难解的问题", "这个刻度 也就是所谓的指数复杂度", "具体来说 计算成本T（n）", "可以表示为 一个常数a的n次方的形式", "我们说 这个和刚才的多项式是有天壤之别的", "可以从以下这几个性质 看出这一点", "也就是说 对于任何固定的", "n的c次方 这样的多项式而言", "它都可以在大O记号的意义下", "被2的n次方 也就是这样的一个指数形式", "给覆盖", "其它的更极端的情况 也是如此", "我们看看 即便这个次数非常非常的高", "1000应该已经足够大了", "而反过来 作为指数下面的那个底数", "既使是尽可能的小", "但是它只要是严格地大于1", "后者构成前者的上界的这样一个性质", "总是能够满足的 当然反过来", "多项式也构成了指数的一个下界bigΩ", "这类算法的计算成本 是增长的极其之快的", "我们很快就会有直观的感觉", "所以通常认为是不可忍受的", "尽管是可计算的 还不属于不可计算的", "但是 我们也称它作难解的问题", "而前者 就是我们上页所介绍的多项式", "通常认为它是容易解的", "所以在指数和多项式之间", "有一个明显的分水岭", "可解的 就是多项式的问题", "我们称作是存在有效算法的", "反之 我们也称作是不存在有效算法的", "这里有个很有意思的现象", "很多问题 它的指数形式的算法", "都很容易看出并且实现", "然而 我们如果要试图去设计", "并且改进成一个多项式的算法", "就会发现极其不易", "甚至在很多情况下 注定是徒劳的", "我们下面就来看 这样一个具体的例子"],
	"video_id": "5c1d7ccdf8954a3c9168f4fe4bfe2189",
	"vertical_id": "cda0d1c48fa741ecabf076150f7cab27",
	"start": [4650, 8830, 12390, 14980, 19200, 24270, 28300, 31700, 33990, 37130, 42660, 46180, 50600, 55460, 57180, 61200, 63840, 67660, 71730, 76300, 82440, 87930, 92160, 99440, 102520, 106280, 109820, 113520, 117990, 123100, 124900, 127820, 133710, 135580, 139670, 143530, 146260, 149380, 151700, 158040],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-5\t: 难解",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "417901FD7A750DB49C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01c-5\t: 难解"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "cda0d1c48fa741ecabf076150f7cab27",
	"text": ["01c-5\t: 难解"],
	"video_id": "5c1d7ccdf8954a3c9168f4fe4bfe2189",
	"vertical_id": "cda0d1c48fa741ecabf076150f7cab27",
	"start": [0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-5\t: 难解",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "417901FD7A750DB49C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01c-5\t: 难解"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [6690, 11240, 14730, 16710, 18310, 21400, 23730, 26270, 30340, 33230, 37950, 39310, 43210, 47320, 50720, 55450, 61160, 65000, 68450, 70820, 75750, 80180, 83410, 89770, 93030, 96070, 98190, 104210, 107250, 111510, 113950, 116810, 120190, 122780, 125500, 129300, 133040, 138880, 141450, 146560, 149100, 155350, 159770, 162990, 168400, 170380, 173800, 175200, 177130, 180860, 185170, 192380, 195100, 199840, 201870, 205750, 209190, 211310, 217070, 221000, 222250, 224790, 231480, 233610, 235520, 239240, 242780, 247080, 251020, 254860, 256540, 260080, 262230, 265710, 267240, 271320, 273160, 279670, 281500, 283680, 285710, 288010, 291470, 294770, 299890, 301590, 304410, 306840, 309150, 312310, 314210, 316440, 317660, 319540, 323730, 327140, 329320, 331810, 333390, 334960, 337400, 342880, 346200, 350340, 353350, 355700, 359170, 361260, 364610, 367630, 370140, 375340, 379230, 382170, 385000, 388440, 390240, 392460, 394930, 397600, 400700, 404540, 406780, 408570, 410180, 413390, 418170, 420680, 424840, 427990, 430600, 432340, 434390, 436150, 439490, 441010, 443650, 445500, 448580, 451640, 453600, 456860, 460470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	"block_id": "4e9bbc3fa59e4c788758c962c0bfdb43",
	"text": ["考察这样的一个问题", "如果我们给定了n个正的整数", "而且他们的总和正好是两倍的m", "也就是说 是一个偶数", "那么 作为一个整体", "是否它存在一个其中的子集T", "使得T中的元素的总和", "是整体总和的一半？", "那么其实这个言下之意就是说", "不仅T中的元素总和是m", "其实T的补集中的所有的元素的总和", "也应该是等于m", "或者简而言之 就是说", "原来那n个整数 能否被恰好分成两部分", "元素的个数可能未必相同", "但是他们的总和都是各自为m", "我们来看一下这个问题具体的一个模型和实例", "我们来考察一下美国的大选", "我们知道美国的大选 采用的是所谓的", "选举人团这么样一个制度", "也就是说 整个国家 按照行政区域的州", "包括特区在内 划分成若干个区", "具体来说 是51个区", "每一个地区都有自己", "由历史和包括人口等因素决定的", "一个具体的选举人票数", "各自有各自的分布", "而在选举的过程中 每一州", "都是要做各自独立的统计", "如果某一选举人 在某一个州获胜", "理论上讲只多出一票", "也可以称他在对应的这个州获胜", "而一旦他在某一个州获胜", "这个州的所有的选举人票", "比如说 对于马里兰来说 就是10票", "对于加州来说 那就是55票", "都会归入 这个候选人的名下", "而最终确定谁能够当选", "是由每一个候选人", "所获胜的那些州的选举人票的总和", "来相比较以后决定的", "查看一下近年来选举的数据", "我们可以发现 美国总共51个区", "累计起来有538张票", "换而言之 如果是有两个候选人的话", "那么其中 只要有一个人", "能够获得至少270张选举人票", "那他就可以当选", "这个不难理解", "我们作为细节 要考虑的就是", "会不会出现这么样一种特殊的情况呢？", "也就是 如果这两位候选人恰好各得269票", "那我们又该如何呢？", "在回答这个问题之前", "我们也许应该首先回答一个问题", "就是 如果给定你这样一张表", "由若干个州各自的选举人票", "所构成的这样一张表", "我们能否确定 肯定", "有可能或者根本不可能出现", "刚才我们说的这种", "各自得恰好一半选票的情况呢？", "这个问题 如果我们对照一下的话", "其实就是我们刚才所说的", "这个问题的一个特例", "具体来说 在这里n", "其实就是刚才的 50+1=51", "而所有整数的数值", "分别就是这51个区各自的选举人票数", "我们看到 他们的总和538", "确实是一个偶数", "而我们所担心的那个问题", "其实就是这个问题所询问的", "是否有一个办法 能把所有的州", "按照选举人分成两部分", "使得它们各自所累积起来的选举人票", "恰好是各自一半", "在对这个问题有了这么样", "一个具体模型的理解之后", "我相信 大家很容易都会", "马上得出一个直觉的算法", "也就是说 我们逐一去枚举", "S的每一个子集 并统计其中元素的总和", "也就是说 我们针对其中的某一个候选人", "去枚举出 他所有可能获胜的那些州的组合", "并且统计出各自", "每种情况下他所得的票的总和", "如果一旦其中有发现得一半的", "比如说269 在这种情况下", "那么 我们就报告确实存在", "这样的一种出现歧义的风险", "否则的话 如果到最后也没有发现", "我们就可以安然地说", "根本不会出现这种情况", "所以这种算法的正确性是毋庸置疑的", "然而他的计算成本是多少呢？", "我们不得不表示担心", "因为理由是 我们注意到", "我们所枚举的这些子集", "相对于原来那个集合来说", "就是不折不扣的所谓的幂集", "而幂集的规模 就是原来那个集合的规模", "相对而言的以2为底的指数", "所以 其中这些要枚举", "考察的这些实例的总数", "其实就是一个指数规模的", "而我们这个算法 刚才说过", "必须要去逐一枚举它", "换而言之 即使是从迭代的角度来看", "最简单的情况 它也需要迭代这么多轮", "换而言之 在最坏的情况下", "它需要多达2的n次方这么多时间", "这是一个我们刚才说需要回避的", "所谓的指数复杂度的算法", "有没有更好的办法呢？", "有没有超过我们这种直觉更好的办法呢？", "应该有 对吧？", "但是结论是 没有", "因为我们这里有一个定理", "这样一个两个子集的划分问题", "是一个典型的npc问题", "NP-complete 什么意思呢？", "我们在一些算法的理论课程里头", "应该也许有介绍 在这里", "我也简单把这个意思说一下", "就目前所采用的计算模型而言", "是不存在 可以在多项式时间内", "求解这个问题的算法", "除非 你对这个问题施加一些条件", "比如说 最多的总数n不能超过多少", "或者说 所有的那些元素的数值", "也就是那个票数的分布", "必须符合什么规律等等等等", "如果不做这些假设的话", "这个问题是不存在多项式的算法", "所以 就这个意义而言", "上述我们那种直觉的算法", "居然已经是最优的了", "然而很可惜 也很可悲的是", "它只能是一个指数的算法", "所以 从这里我们也可以看得出来", "这种类似的问题 实际上是很多的", "当然 它不是我们这个课讨论的重点", "我们可以把所有的刻度汇总到一起", "这样的话 我们就对整个这把直尺", "以及上面的刻度 有了一个总体的 一个感觉", "当然需要指出的是", "这里同样 我们需要放眼长远", "如果我们只是在一个相对比较小的尺度", "比如像这个复杂度是从零到30的这个尺度", "我们只观察局部的话", "我们甚至可能会往往得出一个错误的结论", "比如说 在这里", "我们认为 最高复杂度的指数复杂度", "在这里头 并不见得 体现的增长速度是最快的", "原因很简单", "因为我们这里的尺度太小", "所以我们也许应该 换成一个更大的一个尺度", "比如说 只要到大概2000以后 我们就可以看得出来了", "比如说 刚才所说的指数复杂度 2的n次方", "就可以在这地方 很明显地看出", "虽然在小的尺度范围之内", "它并不见得胜过", "比如这里头的 n的立方", "但是 毕竟 它的增长速度在足够远之后 是会体现出来的", "它总有一天会超过 刚才所说的", "所有这些固定阶次的多项式", "所以 这也是我们从总体上 获得了这个标尺（的）一个感觉", "在后边 我们将得到 更加具体的", "针对具体问题的 一些这方面的感觉"],
	"video_id": "4e9bbc3fa59e4c788758c962c0bfdb43",
	"vertical_id": "5f83b6b20cb644b2b178f0c4c2b7be1c",
	"start": [4690, 6690, 11240, 14730, 16710, 18310, 21400, 23730, 28040, 30340, 33230, 37950, 41050, 43210, 47930, 50720, 56920, 61830, 66050, 68450, 71750, 75750, 81120, 86850, 89770, 93030, 96790, 99830, 104210, 108230, 112270, 113950, 117440, 120190, 122780, 125500, 129300, 136240, 138880, 141450, 146560, 152300, 155350, 159770, 164560, 168400, 170380, 173800, 175790, 178650, 181450, 185940, 193490, 198430, 199840, 201870, 205750, 209190, 213000, 217070, 221000, 222250, 227590, 231480, 233610, 237020, 239240, 244410, 247080, 252480, 254860, 258110, 260080, 262230, 265710, 267240, 271320, 278380, 279670, 281500, 283680, 285710, 288010, 291810, 294770, 299890, 301590, 304650, 306840, 309150, 312310, 314210, 316440, 317660, 319540, 323730, 327840, 329320, 331810, 333390, 334960, 337840, 342880, 347420, 350340, 353350, 356890, 359170, 361260, 364610, 367630, 370140, 376000, 379230, 382950, 385000, 388440, 390240, 392460, 394930, 397600, 401350, 404540, 406780, 408570, 410180, 413390, 418170, 421230, 424840, 427990, 430600, 432340, 434390, 436150, 439490, 441010, 443650, 445500, 448580, 451640, 453600, 456860, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-6: \t2−Subset",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "D6DB86E52F44B29E9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01c-6: \t2−Subset"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "5f83b6b20cb644b2b178f0c4c2b7be1c",
	"text": ["01c-6: \t2−Subset"],
	"video_id": "4e9bbc3fa59e4c788758c962c0bfdb43",
	"vertical_id": "5f83b6b20cb644b2b178f0c4c2b7be1c",
	"start": [0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-6: \t2−Subset",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "D6DB86E52F44B29E9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01c-6: \t2−Subset"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [7650, 11100, 14790, 17960, 21160, 27630, 30540, 32210, 35260, 39930, 43080, 46170, 47790, 49810, 55790, 57830, 61330, 62710, 68310, 70930, 80990, 82980, 85300, 88730, 91720, 96160, 99640, 103810, 107260, 111200, 114390],
	"block_id": "e41cb8134f8e4e7e90b8747d7e07642a",
	"text": ["我们可以把所有的刻度汇总到一起", "这样的话 我们就对整个这把直尺", "以及上面的刻度有了一个总体的感觉", "当然需要指出的是", "这里同样 我们需要放眼长远", "如果我们只是在一个相对比较小的尺度", "比如像这个复杂度是从0到30的尺度", "只观察局部的话", "我们甚至可能会往往得出一个错误的结论", "比如说 在这里我们认为", "最高复杂度的指数复杂度 在这里", "并不见得体现的增长速度是最快的", "原因很简单", "因为我们这里的尺度太小", "所以我们也许应该", "换成一个更大的尺度", "比如说 只要到大概2000以后", "我们就可以看得出来了", "比如说 刚才所说的指数复杂度 2的n次方", "就可以在这地方 很明显地看出", "虽然在小的尺度范围之内", "它并不见得胜过", "比如这里头的 n的立方", "但是毕竟 它的增长速度", "在足够远之后 是会体现出来的", "它总有一天会超过 刚才所说的", "所有这些固定阶次的多项式", "所以 这也是我们从总体上", "获得了这个标尺的一个感觉", "在后边 我们将针对具体问题", "得到这方面 更加具体的感觉"],
	"video_id": "e41cb8134f8e4e7e90b8747d7e07642a",
	"vertical_id": "6af5836e0a5d4dcda9d23ba26cc69981",
	"start": [4630, 7650, 11100, 16320, 17960, 24560, 27630, 30540, 32210, 37610, 39930, 43080, 47020, 47790, 54170, 55790, 58420, 61330, 64350, 68310, 77930, 80990, 82980, 85300, 88730, 92230, 96160, 101280, 103810, 108020, 111200],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-7: \t增长速度",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "5F2B9EEF5E93950D9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01c-7: \t增长速度"
}, {
	"chapter_id": "a8c755dbb15b4bce9165d4df80f6485a",
	"end": [0],
	"block_id": "6af5836e0a5d4dcda9d23ba26cc69981",
	"text": ["01c-7: \t增长速度"],
	"video_id": "e41cb8134f8e4e7e90b8747d7e07642a",
	"vertical_id": "6af5836e0a5d4dcda9d23ba26cc69981",
	"start": [0],
	"sequential_name": "（c）大O记号",
	"chapter_name": "第一章 绪论(上)",
	"sequential_id": "dcf6afe77a434223a34a2e57f49802e8",
	"vertical_name": "01c-7: \t增长速度",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "5F2B9EEF5E93950D9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01c-7: \t增长速度"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [7520, 12050, 13800, 17570, 21500, 25740, 29770, 33220, 35620, 38640, 42390, 46300, 50990, 56000, 57400, 61420, 63900, 68870, 76040, 79350, 82350, 84800, 87590, 91390, 94010, 100350, 103590, 106840, 110810, 113950, 118360, 121130, 123780, 127830, 131500, 134850, 142220, 145510, 148910, 152660, 156070, 159990, 165970, 169110, 174180, 177080, 180970, 183420, 186820, 190230, 193300, 195590, 199030, 203890, 206570, 211760, 214160, 218580, 220870, 226230, 229210, 231430, 236820, 240050, 245220, 249820, 254640, 257240, 264220],
	"block_id": "e9197a1e5dc142d8aa8debae66e77a26",
	"text": ["通过以基本的计算模型作为参照", "并且以大O记号的形式在上面加入适当的刻度", "我们实际上已经建立了一套", "对DSA进行分析的完整工具和体系", "所以接下来这一节将重点围绕", "如何运用这种工具对DSA进行性能的分析", "包括其中主要的思路和方法", "与这套体系建立的思路类似", "我们在具体运用这套体系的时候", "依然要坚持去粗存精", "这部分内容的学习效果如何", "最终要看我们是否能够真正的自如驾驭", "和运用这套工具来完成去粗存精式的估算", "这种估算能力的最高境界", "从某种意义上讲", "就像很多人夸赞大数学家欧拉一样", "这里的He是指欧拉", "能够成为像呼吸一样对人而言的一种本能", "算法分析的任务主要包括两个方面的内容", "一是算法自身的正确性证明", "我们稍后将会举例给出一种主要的办法", "也就是通过挖掘算法所具有的", "不变性和单调性来共同证明", "其次也是我们接下来将要重点介绍的", "是复杂度的分析和界定", "我们可以回忆起来", "一个算法的复杂度需要转化为", "在标准的计算模型 比如说RAM上的描述", "并且统计它在对应的执行过程中", "所执行的基本指令的总数", "那么难道我们在实际的估算过程中", "真的需要去统计并且累计", "这样的基本指令的执行次数吗", "非常幸运这是大可不必的", "而之所以能这样是得益于", "前面所引入的渐近复杂度这样一个概念", "实际上我们可以注意到这么样一个事实", "也就是C++或者其他的高级语言", "所提供和支持的基本指令", "其实和RAM或者图灵机模型所给出的", "那种基本的操作是等效的", "当然这种等效是在常数意义下的", "就渐近复杂度而言其实前者所说的基本指令", "和后者所说的基本指令大体是相当的", "所以我们往往在不致歧义的前提下", "会偷换或者是借用这两个概念", "二者所说的的基本操作或者基本指令", "在这个意义上讲是等价的", "当然 我们这里考察的重点", "依然不是平铺直叙式的代码段", "而是包括条件分支转向", "以及它的规范化的形式", "也就是迭代循环包括for while", "包括在很多语言中还有do while、repeat until等形式", "本质上讲都是迭代循环", "归根到底还是通过迭代来实现的函数调用", "包括自我调用也就是递归", "我们所提供和采用的分析方法", "大概可以分为这么几类", "针对于迭代式算法 最重要的技巧", "也是我们需要训练和提高的一种功夫", "就是对级数求和的能力", "而对于递归式的算法主要的武器有两个", "一个是直观形象的递归跟踪", "第二个是借助于抽象思维的递推方程", "当然在实际的研究过程中", "包括在考试和习题过程中还有第三种方法", "也就是猜测再加上验证", "这种方法其实也是非常非常重要的一类手段"],
	"video_id": "e9197a1e5dc142d8aa8debae66e77a26",
	"vertical_id": "009b7384caed4d8a8d2fc6897561d6ea",
	"start": [4540, 7520, 12050, 13800, 18430, 21500, 26260, 30580, 33220, 35620, 40310, 42390, 46300, 53370, 56000, 57400, 62360, 63900, 72310, 76040, 79350, 82350, 84800, 88590, 91390, 98190, 100350, 103590, 107340, 110810, 115570, 118360, 121130, 125470, 128930, 131500, 139040, 142720, 145510, 148910, 152660, 156990, 161210, 165970, 170610, 174180, 178080, 180970, 184900, 186820, 190230, 193300, 195590, 199030, 203890, 207620, 211760, 215710, 218580, 222480, 226230, 229210, 232930, 237620, 241690, 246800, 249820, 254640, 258690],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-1: 算法分析",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "CFD1B772B633E6C69C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01d-1: 算法分析"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [0],
	"block_id": "b64e822fe8bf4fc18e86a560087efebc",
	"text": ["第一章 绪论(下)"],
	"video_id": "e9197a1e5dc142d8aa8debae66e77a26",
	"vertical_id": "009b7384caed4d8a8d2fc6897561d6ea",
	"start": [0],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-1: 算法分析",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "CFD1B772B633E6C69C33DC5901307461",
	"type": "chapter",
	"video_pos": 0,
	"video_name": "01d-1: 算法分析"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [0],
	"block_id": "c07c0714ac024ade9d430f1779c6a459",
	"text": ["（d）算法分析"],
	"video_id": "e9197a1e5dc142d8aa8debae66e77a26",
	"vertical_id": "009b7384caed4d8a8d2fc6897561d6ea",
	"start": [0],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-1: 算法分析",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "CFD1B772B633E6C69C33DC5901307461",
	"type": "sequential",
	"video_pos": 0,
	"video_name": "01d-1: 算法分析"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [0],
	"block_id": "009b7384caed4d8a8d2fc6897561d6ea",
	"text": ["01d-1: 算法分析"],
	"video_id": "e9197a1e5dc142d8aa8debae66e77a26",
	"vertical_id": "009b7384caed4d8a8d2fc6897561d6ea",
	"start": [0],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-1: 算法分析",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "CFD1B772B633E6C69C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01d-1: 算法分析"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [8130, 9660, 13460, 16510, 20410, 22510, 26740, 32410, 35430, 38070, 40730, 44770, 47410, 54940, 57870, 59940, 63590, 65800, 68790, 70720, 73250, 76810, 80530, 84990, 89180, 95560, 99900, 102010, 104190, 106910, 109470, 112200, 115080, 116930, 119010, 123240, 125830, 130410, 134650, 137830, 139220, 141630, 144130, 150690, 155680, 161160, 169810, 172520, 174620, 177330, 183010, 186560, 187560, 192110, 197640, 201010, 204670, 207090, 212810, 215280, 219250, 223380, 226480, 231980, 238790, 244460, 247460, 252000, 256870, 262330, 265830, 269350, 271790, 280400, 284380, 288600, 292190, 296990, 299280, 303090, 308550, 309900, 314520, 318310, 322560, 327580, 329600, 335950, 341010, 344720, 348380, 350130, 353420, 356130, 359300, 363540, 366920, 370610, 375060, 378000, 380450, 382500, 385080, 386850, 392570, 397540, 402770, 405740, 408310, 411710, 413580, 415330, 420090, 422560, 426080, 431860, 437000, 439390, 442110, 448660, 452270, 458050, 460280, 465670, 472010, 475480, 479580, 482560, 487020, 490100, 491570, 495420, 497580, 501540],
	"block_id": "c55e5ef98f9e4564af1e36c4906320e3",
	"text": ["首先来复习级数方面的一些知识", "并且做一归纳", "最基本的形式 莫过于算术级数", "也就是说 从某一个数开始", "以固定的间隔为单位 不断地线性递增", "它们的总和 称作算术级数", "第一个等号 是我们在中学时代就非常熟悉的", "第二个等号 则是在引入了大O记号之后所得出的结论", "那么 这个结论我们归纳一下可以说", "所谓算术级数 在阶次上讲", "应该是和它的末项", "也就是在这里讲n的平方 同阶的", "这是我们需要记住的第一个规律", "再来考察在幂方的意义下对算术级数的推广", "具体来说对于任何一个幂方次", "无论是2、3、4还是5", "我们都在算术级数原来的基础上", "使得每一项都统一地变成", "2次方、3次方、4次方", "或者是5次方 诸如此类", "那么这种类似的级数", "运用此前所学过的一些基本的数学知识", "实际上是不难得出一些对应的通项公式", "比如这个 以及这个 以及这个", "这里最重要的是 在大O意义下", "我们可以将这些等式的主要脉络归纳出来", "我们可以看到分别是3次方 4次方和5次方", "所以从归纳的角度", "我们大致可以得出这么一个结论", "幂方这种级数的总和", "应该是比这个幂的方次", "其实也是这个级数的末项", "要恰好高出一阶", "当然我们这里是不完全的归纳", "如果要严格地证明", "我们需要借助这样一个准确的分析", "而这个准确的分析的最关键的一步", "主要是这样 将幂方级数求和转化为", "0到n之间x d次方的这么样一个积分", "这样一个近似的估计是最重要的一环", "而后面的这个求解", "都是我们在微积分课程中", "所应该已经学会的概念和方法", "我们看到 确实对于幂次为d的幂方级数而言", "它的总和 确实是比这个d要恰好高出一阶", "这也是我们需要总结并且记忆下的一个规律", "几何级数也是算法复杂度的一种重要形式", "也就是从某一个常数开始", "不断地以固定的倍数", "呈现几何式的增长", "这样一种级数的总和 我们在中学时代", "应该都已经得到过它的通项公式", "就是这个", "在这里我们同样运用大O记号", "可以将这个总和 从数量级上简化为a^n", "也包括这里最常用的一种特例", "就是从1开始以2为倍数的这么样一个几何级数", "我们说结论是类似的", "概括而言 这类几何级数的规模", "在大O记号渐近意义下", "是与这个级数最后一项同阶的", "因为这里的a^n既是总和", "也可以理解为是这个级数的末项", "2的n次方 同样对应于2的n次方", "再来考察所谓的收敛级数", "也就是说 级数中的各项会逐次递减", "而且这种递减的速度足够快", "以至于尽管每一项都是保持正数", "但是他们的总和 不会超过某一个上界", "这个上界虽然数值不同", "但是从渐近意义上讲 都可以视作是常数", "因此从大O记号的角度来看", "它们都可以记作是O(1)", "那么有同学很自然地就会问这个问题", "这样一类每一项都可能是分数的级数", "在我们这里 有必要讨论和应用吗", "他们的理由非常自然", "因为我们这里考察的是基本操作的次数", "以及存储单元的数目", "这种数目 怎么可能是分数或者小数呢", "很有意思的是 在某种意义上讲", "的确如此", "考察这样一个实例", "假设某段代码的迭代循环", "可以等效地描述为硬币的投掷过程", "这枚硬币投中正面的概率是λ", "介于0和1之间", "当然反过来 投中反面的概率就是1减掉λ", "现在这个程序可能运行的效果是等效于", "不断地投掷这枚硬币", "直到第一次出现反面", "而算法的复杂度呢", "取决于你在整个这样的过程中", "总共投掷了多少次硬币", "那么可能有不同的情况", "有投一次即命中的情况", "有投两次即命中的情况 以及投三、投四", "理论上讲投任何多次都有可能", "那么有概率基础的同学就能回想起来", "这是一个典型的几何分布", "它的数学期望", "也就是说我们从期望的意义上讲", "这个过程需要投掷多少次", "可以表示为这样一个表达式", "而它的解恰好就是1减掉λ分之一", "λ既然是常数 所以这个确实也是常数", "当然还有另一类级数", "它虽然未必是收敛的", "但是它的长度是有限的", "以至于它的界也是我们经常用到", "而且是需要记下的", "典型的有两个", "一个是1/1 加上1/2 加1/3", "一直累计到1/n", "这是典型的调和级数", "它的界可以估计为logn 这是个确界", "另外一个呢 是所谓的对数级数", "也就是log1 其实是0", "log2、log3一直加到logn", "我们说了 所有对数的和等于乘积的对数", "所以这相当于是n的阶乘 再去取对数", "通过Stirling逼近可以得到这么样一个结论", "也就是说n的阶乘log", "实际上是和nlogn在渐近的意义上讲等阶的", "这两个级数 都是在我们后面的课程中要经常用到的", "也是希望大家能够熟练掌握的", "更多的级数呢？", "我们这个课程里没有时间去逐一地介绍", "有兴趣的同学 我们推荐大家去读", "有一本书叫《Concrete Mathematics》", "也就是《具体数学》", "在那里头呢 有相当多的篇幅", "就是介绍这方面的内容", "当然 也包括很多与我们的课程相关的内容"],
	"video_id": "c55e5ef98f9e4564af1e36c4906320e3",
	"vertical_id": "7578a611ffcd4afaaa3c8dc977f59fe0",
	"start": [5150, 8130, 10830, 13460, 16510, 20410, 22510, 26740, 32410, 35430, 38070, 40730, 45270, 50690, 55530, 57870, 59940, 63590, 65800, 68790, 71920, 73250, 76810, 81590, 84990, 90020, 95560, 100510, 102010, 104670, 106910, 109470, 112640, 115080, 117420, 119480, 123240, 125830, 130410, 135250, 137830, 139220, 141630, 145700, 150690, 157480, 166370, 170350, 172520, 174620, 178960, 183010, 186560, 188860, 192110, 198740, 201010, 205490, 208710, 212810, 215280, 220150, 223380, 227310, 235710, 239460, 244460, 247460, 252000, 260030, 262330, 266560, 269350, 276630, 280400, 285040, 290050, 292190, 296990, 299280, 305530, 308550, 312290, 315260, 318310, 322560, 328110, 330380, 337130, 341010, 344720, 348380, 350130, 353420, 356850, 360820, 363540, 366920, 371720, 375060, 378820, 380450, 382500, 385080, 387430, 393760, 399910, 402770, 405740, 409020, 411710, 414000, 415330, 420090, 423370, 427310, 434310, 437270, 439390, 443050, 449620, 453300, 458050, 460280, 466570, 472590, 478340, 479580, 483620, 487020, 490100, 492360, 495420, 497580],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-2: 级数",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "5DB05E6F6C76A94B9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01d-2: 级数"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [0],
	"block_id": "7578a611ffcd4afaaa3c8dc977f59fe0",
	"text": ["01d-2: 级数"],
	"video_id": "c55e5ef98f9e4564af1e36c4906320e3",
	"vertical_id": "7578a611ffcd4afaaa3c8dc977f59fe0",
	"start": [0],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-2: 级数",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "5DB05E6F6C76A94B9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01d-2: 级数"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [7330, 10930, 12930, 15420, 19060, 24760, 29120, 32330, 34080, 38700, 43010, 48620, 53350, 57070, 59790, 63240, 65510, 68320, 72740, 76400, 79980, 83070, 84900, 88890, 94360, 97800, 102680, 106360, 109510, 112630, 116800, 119590, 124170, 129050, 131790, 137130, 140620, 144080, 146100, 149940, 153800, 159150, 164100, 166310, 170220, 173370, 179080, 184440, 189730, 192460, 194660, 199500, 206330, 209500, 210830, 213620, 216410, 221150, 225670, 227730, 231800, 234920, 238240, 242670, 245360, 248980, 251760, 253870, 257980, 261800, 266110, 269900, 274540, 278250, 283260, 286280, 289670, 291510, 296350, 300700, 305200, 310270, 314570, 317550, 320590, 325760, 328870, 333190, 337730, 340460, 343500, 346850, 350070, 352720, 355010, 362030, 364800, 370630, 376100, 378380, 381320, 384590, 387840, 390190, 391530, 396700, 399240, 404280, 408510, 411870, 414320],
	"block_id": "7db46e0f4fb04d5693a7b383af7ba31c",
	"text": ["借助上述关于级数的一些结论", "如何来具体分析代码段中所涉及的", "循环操作的复杂度呢？", "我们来看几个实例", "这是一个典型的二重循环", "外循环 控制变量i 是从0到n不断的累加", "内循环 控制变量j 从0到n不断的累加", "这是一个比较简单的二重循环", "具体的就体现为", "两个控制变量 相互之间没有耦合", "内循环 每一次执行的 都是长度为n的一个循环", "而外循环 要求内循环也反复地要迭代n趟", "从数值上看 它是n个n累加起来", "可以理解成 是一个常数的数列", "它的数值就是n平方", "当然 我们可以记下这种计算的结果", "但是 在今后要将这个", "变成自己的一个直观的反馈", "在这里 我们推荐给大家看这样一个图", "这是一个二维的矩形", "i 外循环的控制变量", "和j 也就是内循环的控制变量", "构成对应的两个维度", "这个矩形中的每一个点", "都对应于内部这个O（1）的 操作的一次执行", "而整个这个二重循环", "其实就等效于 这个矩形被填充的过程", "因此 我们可以建立这么样一个联系", "也就是 整个这段代码体的时间复杂度", "就等于这个矩形的面积", "从这个意义上讲 我们可以很清楚的看出来", "确实它是平方量级的", "我们再来看一个 略微有点变化的例子", "这个对应于一个算术级数", "我们刚刚讲过 作为算术级数", "它的总和 取决于它的末项的平方：O(n^2)", "我们也可以注意到 尽管在形式上", "相对于上例 有一些变化", "但是 就复杂度而言", "二者在渐近意义上讲 是完全相同的", "这样一个典型的循环模式", "也希望同学们 在头脑中形成这样一个图景", "使得你以后能够不仅很好的理解最终的结果", "甚至可以把它强记下来", "我们来看一下 整个这个过程", "依然是可以表述为一个二维图形", "外循环的控制变量i 依然是从0一直变化到n", "而内循环的控制变量j 将是像我们刚才所分析的那样", "呈一个算术级数 不断线性递增的规律", "所以总体而言", "刚才我们的结论依然是成立的", "这段代码所需要执行的时间", "应该等于这个被填充的三角形总体的面积", "从图形可以很清楚地看的出来", "相对于上例", "这个图形的面积 虽然只有一半", "但是 从渐近的阶次而言", "二者是完全相等 都是平方的量级", "下一个实例 是在上一个实例的基础上", "继续做了一些变化", "我们看到 内部循环的控制变量j", "增长的步长 将不再是简单的1", "而是一个更大的数 比如说两千左右", "这样的一个变化 对整体的算法复杂度", "在渐近的意义而言 又有多少影响呢？", "不难理解 整个这个过程", "对于内循环各趟的长度而言", "依然会构成一个算术级数", "我们固然可以沿用刚才的那些方法", "但是我们说 现在 也许你不必再这样做了", "因为 我们可以在头脑里参照刚才那种方法", "画出这样一个二维的图景 可以看到", "外部循环的控制变量i 依然是从0变化到n", "这就意味着 内循环必然执行n趟", "而每一趟的长度呢 不再是简单的从0到i", "因为 现在它的步长更大了", "等效于每一趟内循环的累计长度", "都相对于上面那个例子", "缩减到固定的2013分之一", "这也相当于把坐标轴做了这样一个压缩", "从这里 我们可以看的出来 这个面积", "确实依然可以用来度量整体这段代码的复杂度", "而这段的面积 虽然貌似缩小了", "但这只是一个常系数的缩小", "这个两千左右分之一 一个常系数", "并不足以影响整个这段代码的渐近时间复杂度", "它依然是n平方", "进一步 再来看这样一个例子", "我们看到 在以上实例的基础上做了一些调整", "那么 最重要的就是在这儿", "我们看到 外循环的控制变量i", "不再是按刚才那样 是线性的增长", "而是每次都做了一个左移移位的操作", "这等效于乘以2", "也就是说它每次都是加倍", "换而言之 内循环的长度i 将以2为倍数", "呈现出一个几何级数的形式", "当然 它的最大值是由n决定的", "我们固然 也可以用代数的形式 对它进行估算", "但是 我们也推荐大家", "用刚才那种直观的几何的方式", "把这样的一个复杂度的图景 给它绘制出来", "当它在你头脑里浮现的时候", "你已经知道 它的复杂度是多少了", "你可以很快的得出结论", "这个更为复杂一些的实例", "我们留给大家", "请大家在课后 对照这里所给的直观图示", "以及代数推导过程 对结果进行验证", "实际上 在我们的习题解析中", "还有更多的实例"],
	"video_id": "7db46e0f4fb04d5693a7b383af7ba31c",
	"vertical_id": "616782a8aab34e10a3c5908ae5a9af73",
	"start": [4570, 7330, 10930, 14090, 16540, 19060, 24760, 29910, 32720, 34080, 39540, 44030, 49950, 54160, 57070, 60570, 63240, 65510, 69230, 74180, 77650, 79980, 83070, 86580, 88890, 95470, 97800, 103590, 106360, 109510, 113840, 116800, 121400, 125940, 129730, 131790, 138420, 140620, 144080, 146660, 150820, 154670, 159920, 164100, 167740, 170220, 174010, 179080, 184440, 191210, 192460, 195580, 199500, 207380, 209500, 210830, 213620, 216410, 223240, 225670, 229380, 231800, 234920, 239840, 242670, 246970, 248980, 251760, 255290, 257980, 262840, 266110, 269900, 275250, 278250, 283260, 286280, 289670, 291510, 297310, 302240, 305200, 311270, 314570, 317550, 320590, 326390, 331010, 334130, 338700, 340460, 343500, 346850, 350070, 352720, 355010, 362030, 365570, 371710, 376100, 378380, 381320, 384590, 387840, 390190, 394550, 397510, 400320, 404280, 409650, 411870],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-3: 循环",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "665F4C9105CE1CC09C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01d-3: 循环"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [0],
	"block_id": "616782a8aab34e10a3c5908ae5a9af73",
	"text": ["01d-3: 循环"],
	"video_id": "7db46e0f4fb04d5693a7b383af7ba31c",
	"vertical_id": "616782a8aab34e10a3c5908ae5a9af73",
	"start": [0],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-3: 循环",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "665F4C9105CE1CC09C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01d-3: 循环"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [8620, 11690, 14070, 16990, 20990, 22470, 25300, 30410, 35860, 39560, 42460, 45000, 46250, 49290, 52540, 56800, 59870, 64060, 68020, 73060, 77430, 78580, 80980, 84690, 88100, 91210, 96180, 100340, 103320, 107640, 110060, 112840, 115240, 119190, 120860, 124150, 126810, 128760, 132210, 137110, 138670, 141450, 147360, 149060, 154770, 157930, 160660, 162630, 164430, 166560, 171890, 173950, 177030, 180890, 184750, 187000, 190070, 193300, 195020, 197290, 200810, 204080, 208260, 210160, 213900, 217510, 221590, 224860, 227360, 230420, 232930, 235370, 237410, 239780, 242690, 245210, 247320, 250460, 252870, 256350, 259690, 262870, 265840, 268580, 271260, 273310, 276470, 277670, 280160, 282490, 285430, 287260, 290110, 294880, 297310, 301780, 306180, 308170, 311320, 314870, 318250, 321190, 325840],
	"block_id": "bb7f356d07054e299db4c98da8ccbd8f",
	"text": ["上述这些方法 也可以推广至一般性的办法", "来看一个简单的实例", "对于任何整数子集S", "当然 作为集合 其中的元素肯定是互异的", "如果其中的元素的个数至少有三个", "那么 我们需要找出", "其中的某一个所谓的非极端的元素", "这个元素在其中既不是最大的也不是最小的", "方法呢 如下", "从S中 只要任意取出三个元素就够了", "我们刚才说了 这是个集合 其中元素是互异的", "所以这样任意取出三个元素X Y Z", "肯定也是互异的", "剩下的两步 实际上就是在其中", "找到这三者中间的一个非极端元素", "排除掉其中的最小的和最大的", "剩下来的那个居中的元素", "就是这三个元素中的非极端元素", "而且这个元素 不管是X、Y或者Z", "同时也必然是原来整个子集的非极端元素", "这个算法 本身没有什么太多的意味", "但是 它告诉我们", "确实在某些情况下", "无论你这个问题的规模N有多大", "某些算法可能所需要的时间", "都是一个固定不变的常数", "再来看一个更一般的例子", "也就是 我们希望针对所谓的排序问题", "给出第一个算法：起泡排序", "所谓的排序的任务就是将N个对象", "在这里 不妨简化作整数", "按顺序的排列 比如说", "一般都是按所谓的非降次序", "所谓的起泡算法 只是其中的", "一个最基本的方法", "它的思路 是基于这样一个观察事实", "在一个已经排序", "称作有序的序列中", "任何一对相邻的元素", "无论是它们 还是它们", "抑或是它们", "都必然是顺序的", "反之 如果有一个序列不是有序的", "我们称之为无序的", "其中必然能找到这样一对 也是紧邻的", "但是大小次序 正好是颠倒的元素", "这种元素可能不是很多", "但是在无序序列中", "像这个例子指示的那样", "至少会包含一对", "所以 这个算法的思路就是", "逐步的去消除这种", "相互紧邻的逆序的元素", "方法是通过所谓的扫描交换", "也就是说 反复地去扫描这个序列", "每一次扫描 我们称作一趟", "在每一趟这样的扫描过程中", "确实发现了有这样的", "逆序的紧邻元素", "就将二者位置交换", "如果在某一趟的过程中", "发现没有这种元素 就可以终止", "否则的话 这种扫描将持续的", "一趟一趟的执行下去", "整个起泡排序的计算过程", "可以精确地描述为这样一段代码", "这是典型的二重循环的模式", "外循环对应的就是", "一趟一趟的扫描交换", "而内循环执行扫描交换", "在每一次内循环中", "它确实会去逐一地检查", "每一对相邻的元素", "如果它们确实是逆序的", "就会令二者交换位置", "同时 大家注意到", "这里有一个标志sorted", "从语意上讲 它表示的是", "整个这个序列是否已经有序", "在当前的这一趟扫描过程中", "如果我们确实已经发现了有一对逆序对", "那我们就不能保证整体是有序的", "所以必须把它清除", "而这个清除以后的标志", "在下一趟扫描的起始之前", "会经过翻转", "并且初始化为一个true", "如果是这样的话", "所以使得这个扫描可以", "一趟一趟地执行下去", "当然我们也可以反过来看", "什么时候会退出呢", "既然你要赋值以后 等于false", "在翻转之前 这个sorted就应该是true", "应该是上一趟的初始值", "那么 它就必然不会执行这一句", "换而言之 就必然不会存在逆序对", "正如我们刚才所说的", "整体这个序列 已经有序了", "下面通过这个例子介绍", "典型的一些方法 来证明一个算法", "为什么是正确的 必然是终止的", "以及 具体它的复杂度又该如何度量"],
	"video_id": "bb7f356d07054e299db4c98da8ccbd8f",
	"vertical_id": "0235c98180344d7783c4107cb29de293",
	"start": [4640, 9440, 11690, 14070, 17770, 20990, 22470, 26110, 34510, 36450, 39560, 42460, 45000, 46830, 49290, 53580, 57720, 59870, 64520, 68020, 74530, 77430, 79070, 80980, 85610, 88100, 93930, 96180, 100340, 104620, 107640, 110060, 112840, 116740, 119190, 121750, 124850, 126810, 129360, 132920, 137110, 139680, 143180, 147360, 149770, 154770, 158730, 160660, 162630, 164430, 168780, 171890, 173950, 178100, 180890, 184750, 187680, 191310, 193300, 195020, 198770, 200810, 204960, 208260, 211720, 213900, 218970, 222670, 224860, 228080, 231160, 232930, 235370, 237410, 239780, 243780, 245210, 248370, 250460, 254090, 256350, 259690, 262870, 266740, 268580, 271260, 273830, 276470, 277670, 280160, 284140, 285430, 287850, 290830, 294880, 298100, 302680, 306940, 308870, 312920, 314870, 318250, 321190],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-4: 实例：非极端元素+起泡排序",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "129C42C4F0B95E6E9C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01d-4: 实例：非极端元素+起泡排序"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [0],
	"block_id": "0235c98180344d7783c4107cb29de293",
	"text": ["01d-4: 实例：非极端元素+起泡排序"],
	"video_id": "bb7f356d07054e299db4c98da8ccbd8f",
	"vertical_id": "0235c98180344d7783c4107cb29de293",
	"start": [0],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-4: 实例：非极端元素+起泡排序",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "129C42C4F0B95E6E9C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01d-4: 实例：非极端元素+起泡排序"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [8870, 11840, 17650, 21090, 23520, 25360, 30330, 33610, 38880, 42640, 45320, 50380, 55770, 58730, 63280, 65940, 68950, 72780, 76280, 77690, 80110, 84610, 86490, 89540, 93910, 98610, 102570, 107230, 110740, 112550, 117770, 121100, 123280, 125550, 127910, 130350, 132550, 134650, 138120, 142640, 143740, 147060, 151550, 153650, 157770, 159480, 162620, 165360, 167340, 169510, 170910, 174370, 177280, 181040, 183630, 187430, 190440, 193650, 200600, 205710, 210770, 213980, 217410, 220000, 223190, 228040, 231720, 234310, 237180, 240440, 243120, 244860, 246870, 248380, 253210, 256380, 260520, 264920, 271040, 274360, 276000, 279310, 281020, 283080, 286770, 288910, 292600, 294560, 298040, 299920, 304840, 308860, 311510, 313660, 317770, 320020, 322230, 327810, 331420, 335120],
	"block_id": "11f7549d609e47a2b0c66ddb58aa2a36",
	"text": ["我们的第一个问题 关乎这个算法的有穷性", "也就是说这个算法 是否必然会终止", "答案首先基于这个算法所具有的这样一条不变性", "可以断言 上述这个算法", "在经过了K轮的外循环", "也就是 K轮的扫描交换之后", "全局最大的那K个元素 必然会各就各位", "来看一下下面这个图", "如果由上而下是构成整个这个序列", "也是我们整个扫描交换的执行方向", "那么 在第一趟扫描过程中", "5和2 因为逆序会交换次序变成2和5", "再接下来 5当遇到7以后 会停留下来", "因为在这个位置是构成了一个顺序对", "那么接下来的情况将是7", "一旦接过这样一个控制权以后", "它作为全局最大的元素", "必然会在接下来的每次比较中", "都大于它当时的右侧", "也就是 后边的那个元素", "从而 构成一个逆序紧邻对", "所以 7会和接下来的邻居4", "以及再接下来的新邻居6", "以及再接下来的邻居3 以至1", "统而言之 它的所有的后继依次交换", "最终效果是7 经过若干次交换", "转移至最后 而原来它的那些后继", "等效于 往前平移一位", "我们看到刚才这个断言", "对于第一趟是对的", "因为经过了K等于1 一轮的扫描交换", "最大的一个元素 也就是7", "确实是就位了", "这不奇怪", "因为7是整体的最大的元素", "所以 在扫描交换的过程中", "一旦它接过控制权", "后面的故事都是一样的", "它会胜出所有的元素 直到最终就位", "那我们看看 在接下来的第二轮循环之后", "又会怎么样呢？", "其实故事是类似的", "也就是说 在这里2和5是顺序的", "所以不用交换", "但是5和4经过一次交换以后 变成4和5", "这都不是最关键的", "我们看 最关键的是", "一直这个故事发生到", "当前最大的元素", "也就是 全局第二大的那个元素6", "接过控制权之后", "它会跟刚才一样", "胜出它的所有的有效的那些后继", "在这个例子讲的3和1", "直到它也就位", "所以推而广之", "后面接下来最大的元素5", "也会在接下来的一轮扫描交换之后就位", "同样4、3和2都会相继的就位", "因此总结一下 这条不变性确实是成立的", "另外呢 在这整个过程中", "也蕴含了一个单调性", "经过了K轮的扫描交换之后", "问题的实质的等效规模", "实际上就会减至n-k", "在我们这个图里 已经用颜色加以了标识", "所有的彩色的部分 都对应是", "当前这个算法有效的问题范围", "也就是说 我们还没有处理的范围", "而灰色的部分都可以认为是", "整个这个算法 当前的视线之外", "对于算法后续的过程", "以及整体的算法的效果", "没有影响的部分", "我们看到 如果最开始的规模是n的话", "经过了一趟以后 确实缩减为n减1", "再经过一趟以后 缩减为n减2", "以致n减3、n减4 n减5 一直下去", "所以由这两条 我们就应该可以得出结论", "这个算法必然会结束", "而且是正确的结束", "而且在终止的时候呢", "我们来考察一下这个不变性", "也就是它的最后的那个边界情况", "当k等于n的时候", "那么 不变性就可以翻译成", "经过了 n轮扫描交换之后", "最大的n个元素", "其实 也就是所有的n个元素", "必然会各就各位", "最后归纳一下 确实", "这个算法经过至多n趟扫描之后", "必然会终止", "而且会给出正确的答案", "通过挖掘 并且综合", "算法所具有的不变性和单调性", "进而证明正确性的方法", "是算法分析中的一个基本而重要的技巧", "我们希望大家能够通过这个实例融会贯通", "在其它的场合能够举一反三"],
	"video_id": "11f7549d609e47a2b0c66ddb58aa2a36",
	"vertical_id": "dcf74d16af4d47a8bf02805408fe8442",
	"start": [4660, 8870, 13550, 18590, 21090, 23520, 25890, 31920, 34720, 38880, 43320, 46270, 51250, 55770, 60140, 63280, 65940, 68950, 72780, 76280, 77690, 81210, 84610, 86490, 90080, 94480, 98610, 102570, 108700, 110740, 113330, 118480, 121100, 124620, 125550, 127910, 130350, 132550, 134650, 139950, 142640, 145370, 147590, 152200, 154260, 157770, 160770, 162620, 165360, 167340, 169510, 171460, 174370, 178350, 181460, 186060, 188300, 190440, 195310, 201220, 207830, 210770, 215040, 217410, 220000, 224900, 229200, 231720, 234310, 237180, 240440, 243120, 244860, 246870, 249390, 253210, 257720, 260520, 265810, 271640, 274360, 277820, 279310, 281020, 283980, 286770, 289550, 292600, 295140, 298040, 302210, 304840, 309920, 311510, 315940, 317770, 320480, 322640, 328410, 331420],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-5: 正确性的证明",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "79E909186B11A9289C33DC5901307461",
	"type": "video",
	"video_pos": 0,
	"video_name": "01d-5: 正确性的证明"
}, {
	"chapter_id": "b64e822fe8bf4fc18e86a560087efebc",
	"end": [0],
	"block_id": "dcf74d16af4d47a8bf02805408fe8442",
	"text": ["01d-5: 正确性的证明"],
	"video_id": "11f7549d609e47a2b0c66ddb58aa2a36",
	"vertical_id": "dcf74d16af4d47a8bf02805408fe8442",
	"start": [0],
	"sequential_name": "（d）算法分析",
	"chapter_name": "第一章 绪论(下)",
	"sequential_id": "c07c0714ac024ade9d430f1779c6a459",
	"vertical_name": "01d-5: 正确性的证明",
	"course_id": "course-v1:TsinghuaX+30240184+sp",
	"ccsource": "79E909186B11A9289C33DC5901307461",
	"type": "vertical",
	"video_pos": 0,
	"video_name": "01d-5: 正确性的证明"
},